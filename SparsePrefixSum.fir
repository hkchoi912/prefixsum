;buildInfoPackage: chisel3, version: 3.4.1, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit SparsePrefixSum : 
  module FA : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_1 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_2 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_3 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_4 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_5 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_6 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_7 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_8 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_9 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_10 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_11 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_12 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_1 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_16 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_17 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_18 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_13 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_14 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_15 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_16 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_17 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_18 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_19 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_20 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_21 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_22 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_23 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_24 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_25 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_19 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_20 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_21 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_22 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_23 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_24 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_25 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_2 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_3 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_26 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_27 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_28 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_29 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_30 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_31 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_26 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_27 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_28 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_29 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_30 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_31 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_32 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_33 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_34 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_35 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_36 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_37 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_38 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_32 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_33 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_34 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_35 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_36 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_37 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_38 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_4 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_5 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_39 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_40 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_41 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_42 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_43 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_44 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_39 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_40 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_41 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_42 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_43 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_44 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_45 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_46 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_47 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_48 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_49 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_50 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_51 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_45 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_46 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_47 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_48 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_49 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_50 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_51 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_6 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_7 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_52 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_53 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_54 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_55 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_56 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_57 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_52 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_53 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_54 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_55 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_56 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_57 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_58 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_59 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_60 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_61 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_62 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_63 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_64 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_58 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_59 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_60 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_61 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_62 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_63 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_64 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_8 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_9 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_65 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_66 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_67 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_68 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_69 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_70 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_65 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_66 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_67 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_68 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_69 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_70 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_71 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_72 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_73 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_74 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_75 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_76 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_77 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_71 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_72 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_73 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_74 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_75 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_76 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_77 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_10 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_11 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_78 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_79 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_80 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_81 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_82 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_83 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_78 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_79 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_80 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_81 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_82 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_83 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_84 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_85 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_86 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_87 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_88 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_89 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_90 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_84 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_85 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_86 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_87 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_88 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_89 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_90 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_12 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_13 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_91 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_92 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_93 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_94 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_95 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_96 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_91 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_92 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_93 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_94 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_95 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_96 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_97 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_98 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_99 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_100 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_101 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_102 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_103 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_97 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_98 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_99 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_100 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_101 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_102 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_103 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_14 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_15 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_104 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_105 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_106 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_107 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_108 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_109 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_16 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_104 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_105 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_106 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_107 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_108 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_109 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_110 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_111 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_112 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_113 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_114 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_115 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_116 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_17 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_110 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_111 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_112 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_113 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_114 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_115 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_116 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_16 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_17 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_117 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_118 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_119 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_120 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_121 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_122 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_18 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_117 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_118 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_119 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_120 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_121 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_122 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_123 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_124 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_125 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_126 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_127 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_128 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_129 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_19 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_123 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_124 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_125 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_126 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_127 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_128 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_129 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_18 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_19 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_130 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_131 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_132 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_133 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_134 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_135 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_20 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_130 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_131 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_132 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_133 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_134 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_135 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_136 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_137 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_138 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_139 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_140 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_141 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_142 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_21 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_136 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_137 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_138 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_139 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_140 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_141 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_142 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_20 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_21 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_143 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_144 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_145 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_146 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_147 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_148 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_22 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_143 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_144 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_145 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_146 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_147 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_148 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_149 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_150 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_151 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_152 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_153 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_154 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_155 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_23 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_149 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_150 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_151 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_152 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_153 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_154 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_155 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_22 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_23 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_156 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_157 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_158 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_159 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_160 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_161 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_24 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_156 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_157 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_158 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_159 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_160 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_161 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_162 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_163 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_164 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_165 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_166 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_167 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_168 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_25 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_162 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_163 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_164 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_165 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_166 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_167 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_168 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_24 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_25 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_169 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_170 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_171 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_172 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_173 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_174 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_26 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_169 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_170 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_171 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_172 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_173 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_174 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_175 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_176 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_177 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_178 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_179 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_180 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_181 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_27 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_175 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_176 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_177 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_178 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_179 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_180 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_181 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_26 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_27 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_182 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_183 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_184 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_185 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_186 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_187 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_28 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_182 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_183 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_184 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_185 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_186 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_187 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_188 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_189 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_190 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_191 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_192 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_193 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_194 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_29 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_188 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_189 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_190 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_191 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_192 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_193 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_194 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_28 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_29 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_195 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_196 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_197 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_198 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_199 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_200 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_30 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_195 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_196 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_197 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_198 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_199 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_200 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_201 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_202 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_203 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_204 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_205 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_206 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_207 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_31 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_201 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_202 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_203 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_204 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_205 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_206 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_207 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_30 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_31 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_208 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_209 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_210 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_211 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_212 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_213 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_32 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_208 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_209 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_210 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_211 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_212 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_213 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_214 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_215 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_216 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_217 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_218 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_219 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_220 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_33 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_214 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_215 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_216 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_217 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_218 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_219 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_220 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_16 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_32 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_33 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_221 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_222 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_223 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_224 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_225 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_226 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_34 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_221 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_222 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_223 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_224 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_225 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_226 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_227 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_228 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_229 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_230 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_231 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_232 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_233 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_35 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_227 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_228 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_229 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_230 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_231 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_232 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_233 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_17 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_34 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_35 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_234 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_235 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_236 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_237 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_238 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_239 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_36 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_234 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_235 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_236 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_237 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_238 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_239 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_240 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_241 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_242 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_243 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_244 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_245 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_246 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_37 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_240 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_241 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_242 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_243 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_244 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_245 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_246 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_18 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_36 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_37 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_247 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_248 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_249 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_250 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_251 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_252 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_38 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_247 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_248 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_249 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_250 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_251 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_252 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_253 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_254 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_255 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_256 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_257 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_258 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_259 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_39 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_253 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_254 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_255 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_256 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_257 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_258 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_259 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_19 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_38 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_39 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_260 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_261 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_262 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_263 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_264 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_265 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_40 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_260 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_261 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_262 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_263 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_264 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_265 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_266 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_267 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_268 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_269 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_270 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_271 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_272 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_41 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_266 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_267 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_268 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_269 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_270 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_271 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_272 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_20 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_40 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_41 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_273 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_274 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_275 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_276 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_277 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_278 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_42 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_273 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_274 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_275 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_276 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_277 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_278 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_279 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_280 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_281 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_282 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_283 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_284 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_285 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_43 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_279 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_280 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_281 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_282 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_283 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_284 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_285 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_21 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_42 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_43 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_286 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_287 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_288 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_289 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_290 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_291 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_44 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_286 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_287 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_288 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_289 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_290 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_291 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_292 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_293 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_294 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_295 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_296 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_297 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_298 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_45 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_292 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_293 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_294 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_295 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_296 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_297 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_298 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_22 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_44 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_45 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_299 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_300 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_301 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_302 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_303 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_304 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_46 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_299 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_300 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_301 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_302 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_303 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_304 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_305 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_306 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_307 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_308 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_309 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_310 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_311 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_47 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_305 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_306 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_307 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_308 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_309 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_310 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_311 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_23 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_46 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_47 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_312 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_313 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_314 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_315 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_316 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_317 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_48 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_312 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_313 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_314 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_315 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_316 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_317 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_318 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_319 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_320 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_321 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_322 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_323 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_324 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_49 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_318 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_319 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_320 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_321 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_322 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_323 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_324 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_24 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_48 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_49 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_325 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_326 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_327 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_328 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_329 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_330 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_50 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_325 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_326 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_327 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_328 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_329 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_330 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_331 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_332 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_333 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_334 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_335 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_336 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_337 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_51 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_331 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_332 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_333 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_334 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_335 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_336 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_337 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_25 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_50 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_51 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_338 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_339 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_340 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_341 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_342 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_343 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_52 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_338 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_339 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_340 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_341 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_342 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_343 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_344 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_345 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_346 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_347 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_348 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_349 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_350 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_53 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_344 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_345 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_346 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_347 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_348 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_349 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_350 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_26 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_52 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_53 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_351 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_352 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_353 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_354 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_355 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_356 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_54 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_351 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_352 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_353 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_354 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_355 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_356 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_357 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_358 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_359 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_360 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_361 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_362 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_363 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_55 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_357 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_358 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_359 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_360 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_361 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_362 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_363 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_27 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_54 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_55 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_364 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_365 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_366 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_367 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_368 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_369 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_56 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_364 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_365 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_366 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_367 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_368 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_369 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_370 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_371 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_372 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_373 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_374 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_375 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_376 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_57 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_370 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_371 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_372 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_373 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_374 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_375 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_376 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_28 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_56 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_57 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_377 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_378 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_379 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_380 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_381 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_382 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_58 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_377 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_378 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_379 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_380 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_381 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_382 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_383 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_384 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_385 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_386 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_387 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_388 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_389 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_59 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_383 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_384 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_385 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_386 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_387 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_388 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_389 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_29 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_58 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_59 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_390 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_391 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_392 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_393 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_394 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_395 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_60 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, sum : UInt<6>, cout : UInt<7>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_390 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_391 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_392 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_393 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_394 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_395 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[6] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[6] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_6 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[7] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_6 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, Sum[2]) @[Cat.scala 30:58]
    node _T_18 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_19 = bits(_T_18, 3, 0) @[Bitwise.scala 109:18]
    node _T_20 = bits(_T_19, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_20, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_20, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_21 = bits(_T_19, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_21, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_21, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_22 = bits(_T_18, 5, 4) @[Bitwise.scala 109:44]
    node hi_5 = bits(_T_22, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_22, 1, 1) @[Bitwise.scala 109:44]
    node lo_5 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_23 = cat(hi_4, lo_5) @[Cat.scala 30:58]
    io.sum <= _T_23 @[PrefixSum.scala 46:10]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_6 = cat(lo_hi_1, Carry[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_6 = cat(hi_hi_1, hi_lo) @[Cat.scala 30:58]
    node _T_24 = cat(hi_6, lo_6) @[Cat.scala 30:58]
    node _T_25 = bits(_T_24, 3, 0) @[Bitwise.scala 109:18]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_7 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_7 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_27 = bits(_T_25, 3, 2) @[Bitwise.scala 109:44]
    node hi_9 = bits(_T_27, 0, 0) @[Bitwise.scala 109:18]
    node lo_8 = bits(_T_27, 1, 1) @[Bitwise.scala 109:44]
    node lo_9 = cat(hi_9, lo_8) @[Cat.scala 30:58]
    node hi_10 = cat(hi_8, lo_9) @[Cat.scala 30:58]
    node _T_28 = bits(_T_24, 6, 4) @[Bitwise.scala 109:44]
    node _T_29 = bits(_T_28, 1, 0) @[Bitwise.scala 109:18]
    node hi_11 = bits(_T_29, 0, 0) @[Bitwise.scala 109:18]
    node lo_10 = bits(_T_29, 1, 1) @[Bitwise.scala 109:44]
    node hi_12 = cat(hi_11, lo_10) @[Cat.scala 30:58]
    node lo_11 = bits(_T_28, 2, 2) @[Bitwise.scala 109:44]
    node lo_12 = cat(hi_12, lo_11) @[Cat.scala 30:58]
    node _T_30 = cat(hi_10, lo_12) @[Cat.scala 30:58]
    io.cout <= _T_30 @[PrefixSum.scala 47:11]
    
  module FA_396 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_397 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_398 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_399 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_400 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_401 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_402 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_61 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<7>, flip b : UInt<7>, flip c : UInt<7>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_396 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_397 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_398 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_399 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_400 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_401 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_402 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[7] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[7] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_7 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_8 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_9 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[8] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_7 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_8 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_9 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node lo_hi = cat(Sum[4], Sum[5]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, Sum[6]) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[2], Sum[3]) @[Cat.scala 30:58]
    node hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_21 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_22 = bits(_T_21, 3, 0) @[Bitwise.scala 109:18]
    node _T_23 = bits(_T_22, 1, 0) @[Bitwise.scala 109:18]
    node hi_1 = bits(_T_23, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_23, 1, 1) @[Bitwise.scala 109:44]
    node hi_2 = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _T_24 = bits(_T_22, 3, 2) @[Bitwise.scala 109:44]
    node hi_3 = bits(_T_24, 0, 0) @[Bitwise.scala 109:18]
    node lo_2 = bits(_T_24, 1, 1) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node hi_4 = cat(hi_2, lo_3) @[Cat.scala 30:58]
    node _T_25 = bits(_T_21, 6, 4) @[Bitwise.scala 109:44]
    node _T_26 = bits(_T_25, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_26, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_26, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_25, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_27 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.sum <= _T_27 @[PrefixSum.scala 46:10]
    node lo_lo = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(Carry[4], Carry[5]) @[Cat.scala 30:58]
    node lo_7 = cat(lo_hi_1, lo_lo) @[Cat.scala 30:58]
    node hi_lo_1 = cat(Carry[2], Carry[3]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_7 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_28 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_29 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_30 = xor(UInt<8>("h0ff"), _T_29) @[Bitwise.scala 102:21]
    node _T_31 = shr(_T_28, 4) @[Bitwise.scala 103:21]
    node _T_32 = and(_T_31, _T_30) @[Bitwise.scala 103:31]
    node _T_33 = bits(_T_28, 3, 0) @[Bitwise.scala 103:46]
    node _T_34 = shl(_T_33, 4) @[Bitwise.scala 103:65]
    node _T_35 = not(_T_30) @[Bitwise.scala 103:77]
    node _T_36 = and(_T_34, _T_35) @[Bitwise.scala 103:75]
    node _T_37 = or(_T_32, _T_36) @[Bitwise.scala 103:39]
    node _T_38 = bits(_T_30, 5, 0) @[Bitwise.scala 102:28]
    node _T_39 = shl(_T_38, 2) @[Bitwise.scala 102:47]
    node _T_40 = xor(_T_30, _T_39) @[Bitwise.scala 102:21]
    node _T_41 = shr(_T_37, 2) @[Bitwise.scala 103:21]
    node _T_42 = and(_T_41, _T_40) @[Bitwise.scala 103:31]
    node _T_43 = bits(_T_37, 5, 0) @[Bitwise.scala 103:46]
    node _T_44 = shl(_T_43, 2) @[Bitwise.scala 103:65]
    node _T_45 = not(_T_40) @[Bitwise.scala 103:77]
    node _T_46 = and(_T_44, _T_45) @[Bitwise.scala 103:75]
    node _T_47 = or(_T_42, _T_46) @[Bitwise.scala 103:39]
    node _T_48 = bits(_T_40, 6, 0) @[Bitwise.scala 102:28]
    node _T_49 = shl(_T_48, 1) @[Bitwise.scala 102:47]
    node _T_50 = xor(_T_40, _T_49) @[Bitwise.scala 102:21]
    node _T_51 = shr(_T_47, 1) @[Bitwise.scala 103:21]
    node _T_52 = and(_T_51, _T_50) @[Bitwise.scala 103:31]
    node _T_53 = bits(_T_47, 6, 0) @[Bitwise.scala 103:46]
    node _T_54 = shl(_T_53, 1) @[Bitwise.scala 103:65]
    node _T_55 = not(_T_50) @[Bitwise.scala 103:77]
    node _T_56 = and(_T_54, _T_55) @[Bitwise.scala 103:75]
    node _T_57 = or(_T_52, _T_56) @[Bitwise.scala 103:39]
    io.cout <= _T_57 @[PrefixSum.scala 47:11]
    
  module CSA4_30 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_60 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_61 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_403 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_404 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_405 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_406 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_407 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_408 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_409 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_410 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_411 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_412 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_62 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_403 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_404 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_405 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_406 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_407 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_408 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_409 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_410 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_411 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_412 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_413 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_414 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_415 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_416 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_417 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_418 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_419 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_420 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_421 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_422 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_423 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_63 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_413 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_414 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_415 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_416 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_417 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_418 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_419 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_420 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_421 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_422 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_423 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_31 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_62 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_63 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_424 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_425 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_426 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_427 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_428 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_429 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_430 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_431 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_432 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_433 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_64 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_424 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_425 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_426 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_427 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_428 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_429 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_430 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_431 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_432 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_433 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_434 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_435 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_436 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_437 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_438 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_439 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_440 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_441 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_442 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_443 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_444 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_65 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_434 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_435 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_436 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_437 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_438 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_439 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_440 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_441 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_442 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_443 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_444 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_32 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_64 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_65 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_445 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_446 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_447 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_448 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_449 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_450 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_451 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_452 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_453 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_454 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_66 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_445 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_446 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_447 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_448 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_449 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_450 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_451 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_452 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_453 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_454 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_455 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_456 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_457 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_458 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_459 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_460 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_461 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_462 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_463 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_464 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_465 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_67 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_455 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_456 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_457 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_458 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_459 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_460 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_461 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_462 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_463 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_464 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_465 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_33 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_66 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_67 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_466 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_467 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_468 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_469 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_470 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_471 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_472 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_473 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_474 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_475 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_68 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_466 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_467 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_468 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_469 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_470 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_471 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_472 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_473 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_474 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_475 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_476 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_477 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_478 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_479 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_480 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_481 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_482 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_483 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_484 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_485 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_486 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_69 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_476 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_477 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_478 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_479 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_480 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_481 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_482 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_483 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_484 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_485 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_486 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_34 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_68 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_69 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_487 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_488 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_489 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_490 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_491 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_492 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_493 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_494 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_495 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_496 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_70 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_487 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_488 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_489 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_490 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_491 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_492 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_493 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_494 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_495 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_496 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_497 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_498 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_499 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_500 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_501 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_502 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_503 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_504 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_505 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_506 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_507 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_71 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_497 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_498 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_499 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_500 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_501 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_502 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_503 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_504 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_505 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_506 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_507 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_35 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_70 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_71 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_508 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_509 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_510 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_511 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_512 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_513 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_514 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_515 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_516 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_517 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_72 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_508 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_509 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_510 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_511 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_512 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_513 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_514 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_515 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_516 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_517 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_518 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_519 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_520 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_521 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_522 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_523 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_524 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_525 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_526 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_527 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_528 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_73 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_518 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_519 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_520 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_521 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_522 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_523 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_524 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_525 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_526 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_527 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_528 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_36 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_72 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_73 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_529 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_530 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_531 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_532 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_533 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_534 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_535 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_536 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_537 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_538 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_74 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_529 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_530 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_531 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_532 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_533 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_534 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_535 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_536 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_537 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_538 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_539 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_540 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_541 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_542 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_543 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_544 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_545 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_546 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_547 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_548 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_549 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_75 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_539 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_540 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_541 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_542 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_543 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_544 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_545 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_546 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_547 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_548 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_549 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_37 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_74 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_75 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_550 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_551 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_552 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_553 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_554 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_555 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_556 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_557 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_558 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_559 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_76 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_550 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_551 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_552 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_553 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_554 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_555 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_556 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_557 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_558 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_559 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_560 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_561 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_562 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_563 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_564 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_565 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_566 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_567 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_568 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_569 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_570 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_77 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_560 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_561 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_562 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_563 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_564 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_565 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_566 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_567 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_568 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_569 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_570 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_38 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_76 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_77 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_571 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_572 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_573 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_574 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_575 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_576 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_577 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_578 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_579 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_580 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_78 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_571 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_572 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_573 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_574 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_575 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_576 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_577 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_578 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_579 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_580 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_581 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_582 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_583 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_584 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_585 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_586 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_587 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_588 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_589 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_590 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_591 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_79 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_581 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_582 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_583 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_584 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_585 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_586 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_587 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_588 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_589 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_590 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_591 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_39 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_78 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_79 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_592 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_593 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_594 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_595 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_596 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_597 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_598 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_599 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_600 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_601 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_80 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_592 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_593 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_594 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_595 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_596 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_597 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_598 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_599 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_600 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_601 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_602 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_603 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_604 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_605 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_606 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_607 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_608 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_609 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_610 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_611 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_612 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_81 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_602 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_603 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_604 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_605 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_606 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_607 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_608 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_609 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_610 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_611 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_612 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_40 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_80 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_81 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_613 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_614 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_615 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_616 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_617 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_618 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_619 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_620 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_621 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_622 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_82 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_613 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_614 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_615 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_616 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_617 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_618 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_619 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_620 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_621 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_622 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_623 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_624 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_625 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_626 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_627 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_628 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_629 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_630 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_631 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_632 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_633 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_83 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_623 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_624 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_625 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_626 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_627 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_628 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_629 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_630 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_631 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_632 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_633 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_41 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_82 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_83 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_634 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_635 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_636 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_637 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_638 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_639 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_640 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_641 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_642 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_643 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_84 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_634 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_635 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_636 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_637 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_638 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_639 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_640 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_641 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_642 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_643 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_644 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_645 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_646 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_647 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_648 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_649 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_650 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_651 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_652 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_653 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_654 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_85 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_644 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_645 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_646 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_647 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_648 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_649 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_650 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_651 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_652 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_653 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_654 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_42 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_84 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_85 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_655 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_656 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_657 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_658 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_659 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_660 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_661 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_662 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_663 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_664 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_86 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_655 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_656 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_657 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_658 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_659 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_660 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_661 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_662 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_663 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_664 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_665 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_666 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_667 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_668 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_669 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_670 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_671 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_672 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_673 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_674 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_675 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_87 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_665 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_666 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_667 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_668 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_669 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_670 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_671 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_672 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_673 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_674 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_675 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_43 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_86 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_87 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_676 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_677 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_678 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_679 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_680 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_681 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_682 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_683 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_684 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_685 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_88 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_676 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_677 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_678 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_679 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_680 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_681 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_682 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_683 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_684 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_685 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_686 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_687 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_688 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_689 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_690 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_691 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_692 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_693 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_694 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_695 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_696 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_89 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_686 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_687 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_688 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_689 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_690 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_691 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_692 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_693 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_694 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_695 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_696 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_44 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_88 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_89 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_697 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_698 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_699 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_700 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_701 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_702 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_703 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_704 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_705 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_706 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_90 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_697 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_698 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_699 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_700 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_701 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_702 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_703 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_704 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_705 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_706 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_707 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_708 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_709 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_710 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_711 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_712 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_713 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_714 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_715 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_716 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_717 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_91 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_707 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_708 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_709 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_710 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_711 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_712 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_713 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_714 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_715 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_716 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_717 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_45 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_90 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_91 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_718 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_719 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_720 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_721 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_722 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_723 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_724 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_725 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_726 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_727 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_92 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_718 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_719 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_720 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_721 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_722 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_723 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_724 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_725 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_726 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_727 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_728 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_729 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_730 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_731 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_732 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_733 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_734 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_735 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_736 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_737 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_738 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_93 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_728 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_729 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_730 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_731 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_732 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_733 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_734 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_735 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_736 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_737 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_738 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_46 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_92 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_93 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_739 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_740 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_741 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_742 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_743 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_744 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_745 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_746 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_747 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_748 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_94 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_739 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_740 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_741 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_742 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_743 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_744 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_745 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_746 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_747 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_748 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_749 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_750 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_751 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_752 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_753 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_754 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_755 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_756 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_757 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_758 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_759 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_95 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_749 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_750 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_751 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_752 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_753 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_754 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_755 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_756 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_757 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_758 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_759 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_47 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_94 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_95 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_760 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_761 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_762 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_763 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_764 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_765 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_766 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_767 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_768 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_769 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_96 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_760 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_761 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_762 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_763 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_764 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_765 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_766 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_767 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_768 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_769 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_770 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_771 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_772 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_773 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_774 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_775 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_776 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_777 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_778 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_779 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_780 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_97 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_770 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_771 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_772 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_773 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_774 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_775 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_776 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_777 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_778 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_779 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_780 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_48 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_96 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_97 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_781 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_782 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_783 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_784 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_785 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_786 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_787 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_788 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_789 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_790 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_98 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_781 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_782 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_783 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_784 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_785 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_786 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_787 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_788 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_789 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_790 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_791 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_792 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_793 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_794 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_795 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_796 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_797 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_798 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_799 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_800 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_801 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_99 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_791 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_792 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_793 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_794 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_795 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_796 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_797 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_798 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_799 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_800 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_801 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_49 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_98 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_99 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_802 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_803 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_804 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_805 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_806 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_807 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_808 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_809 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_810 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_811 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_100 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_802 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_803 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_804 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_805 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_806 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_807 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_808 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_809 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_810 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_811 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_812 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_813 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_814 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_815 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_816 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_817 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_818 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_819 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_820 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_821 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_822 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_101 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_812 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_813 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_814 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_815 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_816 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_817 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_818 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_819 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_820 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_821 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_822 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_50 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_100 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_101 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_823 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_824 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_825 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_826 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_827 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_828 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_829 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_830 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_831 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_832 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_102 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_823 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_824 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_825 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_826 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_827 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_828 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_829 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_830 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_831 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_832 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_833 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_834 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_835 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_836 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_837 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_838 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_839 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_840 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_841 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_842 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_843 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_103 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_833 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_834 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_835 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_836 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_837 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_838 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_839 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_840 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_841 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_842 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_843 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_51 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_102 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_103 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_844 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_845 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_846 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_847 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_848 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_849 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_850 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_851 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_852 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_853 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_104 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_844 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_845 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_846 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_847 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_848 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_849 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_850 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_851 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_852 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_853 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_854 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_855 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_856 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_857 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_858 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_859 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_860 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_861 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_862 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_863 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_864 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_105 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_854 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_855 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_856 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_857 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_858 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_859 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_860 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_861 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_862 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_863 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_864 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_52 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_104 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_105 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_865 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_866 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_867 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_868 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_869 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_870 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_871 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_872 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_873 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_874 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_106 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_865 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_866 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_867 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_868 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_869 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_870 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_871 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_872 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_873 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_874 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_875 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_876 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_877 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_878 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_879 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_880 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_881 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_882 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_883 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_884 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_885 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_107 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_875 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_876 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_877 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_878 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_879 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_880 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_881 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_882 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_883 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_884 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_885 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_53 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_106 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_107 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_886 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_887 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_888 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_889 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_890 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_891 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_892 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_893 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_894 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_895 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_108 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_886 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_887 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_888 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_889 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_890 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_891 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_892 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_893 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_894 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_895 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_896 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_897 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_898 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_899 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_900 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_901 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_902 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_903 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_904 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_905 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_906 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_109 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_896 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_897 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_898 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_899 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_900 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_901 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_902 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_903 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_904 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_905 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_906 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_54 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_108 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_109 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_907 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_908 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_909 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_910 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_911 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_912 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_913 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_914 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_915 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_916 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_110 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_907 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_908 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_909 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_910 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_911 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_912 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_913 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_914 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_915 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_916 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_917 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_918 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_919 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_920 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_921 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_922 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_923 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_924 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_925 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_926 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_927 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_111 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_917 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_918 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_919 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_920 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_921 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_922 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_923 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_924 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_925 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_926 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_927 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_55 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_110 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_111 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_928 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_929 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_930 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_931 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_932 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_933 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_934 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_935 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_936 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_937 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_112 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_928 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_929 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_930 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_931 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_932 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_933 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_934 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_935 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_936 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_937 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_938 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_939 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_940 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_941 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_942 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_943 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_944 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_945 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_946 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_947 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_948 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_113 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_938 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_939 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_940 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_941 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_942 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_943 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_944 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_945 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_946 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_947 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_948 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_56 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_112 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_113 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_949 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_950 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_951 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_952 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_953 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_954 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_955 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_956 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_957 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_958 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_114 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_949 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_950 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_951 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_952 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_953 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_954 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_955 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_956 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_957 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_958 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_959 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_960 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_961 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_962 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_963 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_964 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_965 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_966 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_967 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_968 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_969 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_115 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_959 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_960 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_961 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_962 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_963 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_964 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_965 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_966 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_967 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_968 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_969 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_57 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_114 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_115 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module FA_970 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_971 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_972 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_973 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_974 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_975 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_976 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_977 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_978 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_979 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_116 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, sum : UInt<10>, cout : UInt<11>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_970 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_971 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_972 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_973 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_974 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_975 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_976 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_977 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_978 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_979 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[10] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[10] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_10 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[11] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_10 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[8], Sum[9]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[5], Sum[6]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[7]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_30 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_31 = bits(_T_30, 7, 0) @[Bitwise.scala 109:18]
    node _T_32 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_33 = xor(UInt<8>("h0ff"), _T_32) @[Bitwise.scala 102:21]
    node _T_34 = shr(_T_31, 4) @[Bitwise.scala 103:21]
    node _T_35 = and(_T_34, _T_33) @[Bitwise.scala 103:31]
    node _T_36 = bits(_T_31, 3, 0) @[Bitwise.scala 103:46]
    node _T_37 = shl(_T_36, 4) @[Bitwise.scala 103:65]
    node _T_38 = not(_T_33) @[Bitwise.scala 103:77]
    node _T_39 = and(_T_37, _T_38) @[Bitwise.scala 103:75]
    node _T_40 = or(_T_35, _T_39) @[Bitwise.scala 103:39]
    node _T_41 = bits(_T_33, 5, 0) @[Bitwise.scala 102:28]
    node _T_42 = shl(_T_41, 2) @[Bitwise.scala 102:47]
    node _T_43 = xor(_T_33, _T_42) @[Bitwise.scala 102:21]
    node _T_44 = shr(_T_40, 2) @[Bitwise.scala 103:21]
    node _T_45 = and(_T_44, _T_43) @[Bitwise.scala 103:31]
    node _T_46 = bits(_T_40, 5, 0) @[Bitwise.scala 103:46]
    node _T_47 = shl(_T_46, 2) @[Bitwise.scala 103:65]
    node _T_48 = not(_T_43) @[Bitwise.scala 103:77]
    node _T_49 = and(_T_47, _T_48) @[Bitwise.scala 103:75]
    node _T_50 = or(_T_45, _T_49) @[Bitwise.scala 103:39]
    node _T_51 = bits(_T_43, 6, 0) @[Bitwise.scala 102:28]
    node _T_52 = shl(_T_51, 1) @[Bitwise.scala 102:47]
    node _T_53 = xor(_T_43, _T_52) @[Bitwise.scala 102:21]
    node _T_54 = shr(_T_50, 1) @[Bitwise.scala 103:21]
    node _T_55 = and(_T_54, _T_53) @[Bitwise.scala 103:31]
    node _T_56 = bits(_T_50, 6, 0) @[Bitwise.scala 103:46]
    node _T_57 = shl(_T_56, 1) @[Bitwise.scala 103:65]
    node _T_58 = not(_T_53) @[Bitwise.scala 103:77]
    node _T_59 = and(_T_57, _T_58) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_55, _T_59) @[Bitwise.scala 103:39]
    node _T_60 = bits(_T_30, 9, 8) @[Bitwise.scala 109:44]
    node hi_2 = bits(_T_60, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_60, 1, 1) @[Bitwise.scala 109:44]
    node lo_2 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node _T_61 = cat(hi_1, lo_2) @[Cat.scala 30:58]
    io.sum <= _T_61 @[PrefixSum.scala 46:10]
    node lo_lo_1 = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_3 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_3 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_62 = cat(hi_3, lo_3) @[Cat.scala 30:58]
    node _T_63 = bits(_T_62, 7, 0) @[Bitwise.scala 109:18]
    node _T_64 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_65 = xor(UInt<8>("h0ff"), _T_64) @[Bitwise.scala 102:21]
    node _T_66 = shr(_T_63, 4) @[Bitwise.scala 103:21]
    node _T_67 = and(_T_66, _T_65) @[Bitwise.scala 103:31]
    node _T_68 = bits(_T_63, 3, 0) @[Bitwise.scala 103:46]
    node _T_69 = shl(_T_68, 4) @[Bitwise.scala 103:65]
    node _T_70 = not(_T_65) @[Bitwise.scala 103:77]
    node _T_71 = and(_T_69, _T_70) @[Bitwise.scala 103:75]
    node _T_72 = or(_T_67, _T_71) @[Bitwise.scala 103:39]
    node _T_73 = bits(_T_65, 5, 0) @[Bitwise.scala 102:28]
    node _T_74 = shl(_T_73, 2) @[Bitwise.scala 102:47]
    node _T_75 = xor(_T_65, _T_74) @[Bitwise.scala 102:21]
    node _T_76 = shr(_T_72, 2) @[Bitwise.scala 103:21]
    node _T_77 = and(_T_76, _T_75) @[Bitwise.scala 103:31]
    node _T_78 = bits(_T_72, 5, 0) @[Bitwise.scala 103:46]
    node _T_79 = shl(_T_78, 2) @[Bitwise.scala 103:65]
    node _T_80 = not(_T_75) @[Bitwise.scala 103:77]
    node _T_81 = and(_T_79, _T_80) @[Bitwise.scala 103:75]
    node _T_82 = or(_T_77, _T_81) @[Bitwise.scala 103:39]
    node _T_83 = bits(_T_75, 6, 0) @[Bitwise.scala 102:28]
    node _T_84 = shl(_T_83, 1) @[Bitwise.scala 102:47]
    node _T_85 = xor(_T_75, _T_84) @[Bitwise.scala 102:21]
    node _T_86 = shr(_T_82, 1) @[Bitwise.scala 103:21]
    node _T_87 = and(_T_86, _T_85) @[Bitwise.scala 103:31]
    node _T_88 = bits(_T_82, 6, 0) @[Bitwise.scala 103:46]
    node _T_89 = shl(_T_88, 1) @[Bitwise.scala 103:65]
    node _T_90 = not(_T_85) @[Bitwise.scala 103:77]
    node _T_91 = and(_T_89, _T_90) @[Bitwise.scala 103:75]
    node hi_4 = or(_T_87, _T_91) @[Bitwise.scala 103:39]
    node _T_92 = bits(_T_62, 10, 8) @[Bitwise.scala 109:44]
    node _T_93 = bits(_T_92, 1, 0) @[Bitwise.scala 109:18]
    node hi_5 = bits(_T_93, 0, 0) @[Bitwise.scala 109:18]
    node lo_4 = bits(_T_93, 1, 1) @[Bitwise.scala 109:44]
    node hi_6 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node lo_5 = bits(_T_92, 2, 2) @[Bitwise.scala 109:44]
    node lo_6 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_94 = cat(hi_4, lo_6) @[Cat.scala 30:58]
    io.cout <= _T_94 @[PrefixSum.scala 47:11]
    
  module FA_980 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_981 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_982 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_983 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_984 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_985 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_986 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_987 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_988 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_989 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module FA_990 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node a_xor_b = xor(io.a, io.b) @[PrefixSum.scala 14:22]
    node _T = xor(a_xor_b, io.cin) @[PrefixSum.scala 15:21]
    io.sum <= _T @[PrefixSum.scala 15:10]
    node a_and_b = and(io.a, io.b) @[PrefixSum.scala 17:22]
    node b_and_cin = and(io.b, io.cin) @[PrefixSum.scala 18:24]
    node a_and_cin = and(io.a, io.cin) @[PrefixSum.scala 19:24]
    node _T_1 = or(a_and_b, b_and_cin) @[PrefixSum.scala 20:22]
    node _T_2 = or(_T_1, a_and_cin) @[PrefixSum.scala 20:34]
    io.cout <= _T_2 @[PrefixSum.scala 20:11]
    
  module CSA3_117 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<11>, flip b : UInt<11>, flip c : UInt<11>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst FA of FA_980 @[PrefixSum.scala 32:33]
    FA.io is invalid
    FA.clock <= clock
    FA.reset <= reset
    inst FA_1 of FA_981 @[PrefixSum.scala 32:33]
    FA_1.io is invalid
    FA_1.clock <= clock
    FA_1.reset <= reset
    inst FA_2 of FA_982 @[PrefixSum.scala 32:33]
    FA_2.io is invalid
    FA_2.clock <= clock
    FA_2.reset <= reset
    inst FA_3 of FA_983 @[PrefixSum.scala 32:33]
    FA_3.io is invalid
    FA_3.clock <= clock
    FA_3.reset <= reset
    inst FA_4 of FA_984 @[PrefixSum.scala 32:33]
    FA_4.io is invalid
    FA_4.clock <= clock
    FA_4.reset <= reset
    inst FA_5 of FA_985 @[PrefixSum.scala 32:33]
    FA_5.io is invalid
    FA_5.clock <= clock
    FA_5.reset <= reset
    inst FA_6 of FA_986 @[PrefixSum.scala 32:33]
    FA_6.io is invalid
    FA_6.clock <= clock
    FA_6.reset <= reset
    inst FA_7 of FA_987 @[PrefixSum.scala 32:33]
    FA_7.io is invalid
    FA_7.clock <= clock
    FA_7.reset <= reset
    inst FA_8 of FA_988 @[PrefixSum.scala 32:33]
    FA_8.io is invalid
    FA_8.clock <= clock
    FA_8.reset <= reset
    inst FA_9 of FA_989 @[PrefixSum.scala 32:33]
    FA_9.io is invalid
    FA_9.clock <= clock
    FA_9.reset <= reset
    inst FA_10 of FA_990 @[PrefixSum.scala 32:33]
    FA_10.io is invalid
    FA_10.clock <= clock
    FA_10.reset <= reset
    wire FAs : {flip a : UInt<1>, flip b : UInt<1>, flip cin : UInt<1>, sum : UInt<1>, cout : UInt<1>}[11] @[compatibility.scala 127:12]
    FAs is invalid @[compatibility.scala 127:12]
    FAs[0] <- FA.io @[compatibility.scala 127:12]
    FAs[1] <- FA_1.io @[compatibility.scala 127:12]
    FAs[2] <- FA_2.io @[compatibility.scala 127:12]
    FAs[3] <- FA_3.io @[compatibility.scala 127:12]
    FAs[4] <- FA_4.io @[compatibility.scala 127:12]
    FAs[5] <- FA_5.io @[compatibility.scala 127:12]
    FAs[6] <- FA_6.io @[compatibility.scala 127:12]
    FAs[7] <- FA_7.io @[compatibility.scala 127:12]
    FAs[8] <- FA_8.io @[compatibility.scala 127:12]
    FAs[9] <- FA_9.io @[compatibility.scala 127:12]
    FAs[10] <- FA_10.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_1 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_1 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_2 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_2 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_3 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_3 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_4 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_4 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_5 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_5 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_6 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_6 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_7 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_7 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_8 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_8 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_9 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_9 is invalid @[PrefixSum.scala 33:31]
    wire _WIRE_10 : UInt<1> @[PrefixSum.scala 33:31]
    _WIRE_10 is invalid @[PrefixSum.scala 33:31]
    wire Sum : UInt<1>[11] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    wire _WIRE_11 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_11 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_12 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_12 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_13 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_13 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_14 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_14 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_15 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_15 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_16 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_16 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_17 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_17 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_18 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_18 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_19 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_19 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_20 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_20 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_21 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_21 is invalid @[PrefixSum.scala 34:37]
    wire _WIRE_22 : UInt<1> @[PrefixSum.scala 34:37]
    _WIRE_22 is invalid @[PrefixSum.scala 34:37]
    wire Carry : UInt<1>[12] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_11 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_12 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_13 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_14 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_15 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_16 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_17 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_18 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_19 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_20 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_21 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_22 @[compatibility.scala 127:12]
    Carry[0] <= UInt<1>("h00") @[PrefixSum.scala 36:12]
    node _T = bits(io.a, 0, 0) @[PrefixSum.scala 39:21]
    FAs[0].a <= _T @[PrefixSum.scala 39:14]
    node _T_1 = bits(io.b, 0, 0) @[PrefixSum.scala 40:21]
    FAs[0].b <= _T_1 @[PrefixSum.scala 40:14]
    node _T_2 = bits(io.c, 0, 0) @[PrefixSum.scala 41:23]
    FAs[0].cin <= _T_2 @[PrefixSum.scala 41:16]
    Sum[0] <= FAs[0].sum @[PrefixSum.scala 42:12]
    Carry[1] <= FAs[0].cout @[PrefixSum.scala 43:18]
    node _T_3 = bits(io.a, 1, 1) @[PrefixSum.scala 39:21]
    FAs[1].a <= _T_3 @[PrefixSum.scala 39:14]
    node _T_4 = bits(io.b, 1, 1) @[PrefixSum.scala 40:21]
    FAs[1].b <= _T_4 @[PrefixSum.scala 40:14]
    node _T_5 = bits(io.c, 1, 1) @[PrefixSum.scala 41:23]
    FAs[1].cin <= _T_5 @[PrefixSum.scala 41:16]
    Sum[1] <= FAs[1].sum @[PrefixSum.scala 42:12]
    Carry[2] <= FAs[1].cout @[PrefixSum.scala 43:18]
    node _T_6 = bits(io.a, 2, 2) @[PrefixSum.scala 39:21]
    FAs[2].a <= _T_6 @[PrefixSum.scala 39:14]
    node _T_7 = bits(io.b, 2, 2) @[PrefixSum.scala 40:21]
    FAs[2].b <= _T_7 @[PrefixSum.scala 40:14]
    node _T_8 = bits(io.c, 2, 2) @[PrefixSum.scala 41:23]
    FAs[2].cin <= _T_8 @[PrefixSum.scala 41:16]
    Sum[2] <= FAs[2].sum @[PrefixSum.scala 42:12]
    Carry[3] <= FAs[2].cout @[PrefixSum.scala 43:18]
    node _T_9 = bits(io.a, 3, 3) @[PrefixSum.scala 39:21]
    FAs[3].a <= _T_9 @[PrefixSum.scala 39:14]
    node _T_10 = bits(io.b, 3, 3) @[PrefixSum.scala 40:21]
    FAs[3].b <= _T_10 @[PrefixSum.scala 40:14]
    node _T_11 = bits(io.c, 3, 3) @[PrefixSum.scala 41:23]
    FAs[3].cin <= _T_11 @[PrefixSum.scala 41:16]
    Sum[3] <= FAs[3].sum @[PrefixSum.scala 42:12]
    Carry[4] <= FAs[3].cout @[PrefixSum.scala 43:18]
    node _T_12 = bits(io.a, 4, 4) @[PrefixSum.scala 39:21]
    FAs[4].a <= _T_12 @[PrefixSum.scala 39:14]
    node _T_13 = bits(io.b, 4, 4) @[PrefixSum.scala 40:21]
    FAs[4].b <= _T_13 @[PrefixSum.scala 40:14]
    node _T_14 = bits(io.c, 4, 4) @[PrefixSum.scala 41:23]
    FAs[4].cin <= _T_14 @[PrefixSum.scala 41:16]
    Sum[4] <= FAs[4].sum @[PrefixSum.scala 42:12]
    Carry[5] <= FAs[4].cout @[PrefixSum.scala 43:18]
    node _T_15 = bits(io.a, 5, 5) @[PrefixSum.scala 39:21]
    FAs[5].a <= _T_15 @[PrefixSum.scala 39:14]
    node _T_16 = bits(io.b, 5, 5) @[PrefixSum.scala 40:21]
    FAs[5].b <= _T_16 @[PrefixSum.scala 40:14]
    node _T_17 = bits(io.c, 5, 5) @[PrefixSum.scala 41:23]
    FAs[5].cin <= _T_17 @[PrefixSum.scala 41:16]
    Sum[5] <= FAs[5].sum @[PrefixSum.scala 42:12]
    Carry[6] <= FAs[5].cout @[PrefixSum.scala 43:18]
    node _T_18 = bits(io.a, 6, 6) @[PrefixSum.scala 39:21]
    FAs[6].a <= _T_18 @[PrefixSum.scala 39:14]
    node _T_19 = bits(io.b, 6, 6) @[PrefixSum.scala 40:21]
    FAs[6].b <= _T_19 @[PrefixSum.scala 40:14]
    node _T_20 = bits(io.c, 6, 6) @[PrefixSum.scala 41:23]
    FAs[6].cin <= _T_20 @[PrefixSum.scala 41:16]
    Sum[6] <= FAs[6].sum @[PrefixSum.scala 42:12]
    Carry[7] <= FAs[6].cout @[PrefixSum.scala 43:18]
    node _T_21 = bits(io.a, 7, 7) @[PrefixSum.scala 39:21]
    FAs[7].a <= _T_21 @[PrefixSum.scala 39:14]
    node _T_22 = bits(io.b, 7, 7) @[PrefixSum.scala 40:21]
    FAs[7].b <= _T_22 @[PrefixSum.scala 40:14]
    node _T_23 = bits(io.c, 7, 7) @[PrefixSum.scala 41:23]
    FAs[7].cin <= _T_23 @[PrefixSum.scala 41:16]
    Sum[7] <= FAs[7].sum @[PrefixSum.scala 42:12]
    Carry[8] <= FAs[7].cout @[PrefixSum.scala 43:18]
    node _T_24 = bits(io.a, 8, 8) @[PrefixSum.scala 39:21]
    FAs[8].a <= _T_24 @[PrefixSum.scala 39:14]
    node _T_25 = bits(io.b, 8, 8) @[PrefixSum.scala 40:21]
    FAs[8].b <= _T_25 @[PrefixSum.scala 40:14]
    node _T_26 = bits(io.c, 8, 8) @[PrefixSum.scala 41:23]
    FAs[8].cin <= _T_26 @[PrefixSum.scala 41:16]
    Sum[8] <= FAs[8].sum @[PrefixSum.scala 42:12]
    Carry[9] <= FAs[8].cout @[PrefixSum.scala 43:18]
    node _T_27 = bits(io.a, 9, 9) @[PrefixSum.scala 39:21]
    FAs[9].a <= _T_27 @[PrefixSum.scala 39:14]
    node _T_28 = bits(io.b, 9, 9) @[PrefixSum.scala 40:21]
    FAs[9].b <= _T_28 @[PrefixSum.scala 40:14]
    node _T_29 = bits(io.c, 9, 9) @[PrefixSum.scala 41:23]
    FAs[9].cin <= _T_29 @[PrefixSum.scala 41:16]
    Sum[9] <= FAs[9].sum @[PrefixSum.scala 42:12]
    Carry[10] <= FAs[9].cout @[PrefixSum.scala 43:18]
    node _T_30 = bits(io.a, 10, 10) @[PrefixSum.scala 39:21]
    FAs[10].a <= _T_30 @[PrefixSum.scala 39:14]
    node _T_31 = bits(io.b, 10, 10) @[PrefixSum.scala 40:21]
    FAs[10].b <= _T_31 @[PrefixSum.scala 40:14]
    node _T_32 = bits(io.c, 10, 10) @[PrefixSum.scala 41:23]
    FAs[10].cin <= _T_32 @[PrefixSum.scala 41:16]
    Sum[10] <= FAs[10].sum @[PrefixSum.scala 42:12]
    Carry[11] <= FAs[10].cout @[PrefixSum.scala 43:18]
    node lo_lo = cat(Sum[9], Sum[10]) @[Cat.scala 30:58]
    node lo_hi_hi = cat(Sum[6], Sum[7]) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, Sum[8]) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo_hi = cat(Sum[3], Sum[4]) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, Sum[5]) @[Cat.scala 30:58]
    node hi_hi_hi = cat(Sum[0], Sum[1]) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, Sum[2]) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_33 = cat(hi, lo) @[Cat.scala 30:58]
    node _T_34 = bits(_T_33, 7, 0) @[Bitwise.scala 109:18]
    node _T_35 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_36 = xor(UInt<8>("h0ff"), _T_35) @[Bitwise.scala 102:21]
    node _T_37 = shr(_T_34, 4) @[Bitwise.scala 103:21]
    node _T_38 = and(_T_37, _T_36) @[Bitwise.scala 103:31]
    node _T_39 = bits(_T_34, 3, 0) @[Bitwise.scala 103:46]
    node _T_40 = shl(_T_39, 4) @[Bitwise.scala 103:65]
    node _T_41 = not(_T_36) @[Bitwise.scala 103:77]
    node _T_42 = and(_T_40, _T_41) @[Bitwise.scala 103:75]
    node _T_43 = or(_T_38, _T_42) @[Bitwise.scala 103:39]
    node _T_44 = bits(_T_36, 5, 0) @[Bitwise.scala 102:28]
    node _T_45 = shl(_T_44, 2) @[Bitwise.scala 102:47]
    node _T_46 = xor(_T_36, _T_45) @[Bitwise.scala 102:21]
    node _T_47 = shr(_T_43, 2) @[Bitwise.scala 103:21]
    node _T_48 = and(_T_47, _T_46) @[Bitwise.scala 103:31]
    node _T_49 = bits(_T_43, 5, 0) @[Bitwise.scala 103:46]
    node _T_50 = shl(_T_49, 2) @[Bitwise.scala 103:65]
    node _T_51 = not(_T_46) @[Bitwise.scala 103:77]
    node _T_52 = and(_T_50, _T_51) @[Bitwise.scala 103:75]
    node _T_53 = or(_T_48, _T_52) @[Bitwise.scala 103:39]
    node _T_54 = bits(_T_46, 6, 0) @[Bitwise.scala 102:28]
    node _T_55 = shl(_T_54, 1) @[Bitwise.scala 102:47]
    node _T_56 = xor(_T_46, _T_55) @[Bitwise.scala 102:21]
    node _T_57 = shr(_T_53, 1) @[Bitwise.scala 103:21]
    node _T_58 = and(_T_57, _T_56) @[Bitwise.scala 103:31]
    node _T_59 = bits(_T_53, 6, 0) @[Bitwise.scala 103:46]
    node _T_60 = shl(_T_59, 1) @[Bitwise.scala 103:65]
    node _T_61 = not(_T_56) @[Bitwise.scala 103:77]
    node _T_62 = and(_T_60, _T_61) @[Bitwise.scala 103:75]
    node hi_1 = or(_T_58, _T_62) @[Bitwise.scala 103:39]
    node _T_63 = bits(_T_33, 10, 8) @[Bitwise.scala 109:44]
    node _T_64 = bits(_T_63, 1, 0) @[Bitwise.scala 109:18]
    node hi_2 = bits(_T_64, 0, 0) @[Bitwise.scala 109:18]
    node lo_1 = bits(_T_64, 1, 1) @[Bitwise.scala 109:44]
    node hi_3 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node lo_2 = bits(_T_63, 2, 2) @[Bitwise.scala 109:44]
    node lo_3 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node _T_65 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    io.sum <= _T_65 @[PrefixSum.scala 46:10]
    node lo_lo_hi = cat(Carry[9], Carry[10]) @[Cat.scala 30:58]
    node lo_lo_1 = cat(lo_lo_hi, Carry[11]) @[Cat.scala 30:58]
    node lo_hi_hi_1 = cat(Carry[6], Carry[7]) @[Cat.scala 30:58]
    node lo_hi_1 = cat(lo_hi_hi_1, Carry[8]) @[Cat.scala 30:58]
    node lo_4 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_hi_1 = cat(Carry[3], Carry[4]) @[Cat.scala 30:58]
    node hi_lo_1 = cat(hi_lo_hi_1, Carry[5]) @[Cat.scala 30:58]
    node hi_hi_hi_1 = cat(Carry[0], Carry[1]) @[Cat.scala 30:58]
    node hi_hi_1 = cat(hi_hi_hi_1, Carry[2]) @[Cat.scala 30:58]
    node hi_4 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    node _T_66 = cat(hi_4, lo_4) @[Cat.scala 30:58]
    node _T_67 = bits(_T_66, 7, 0) @[Bitwise.scala 109:18]
    node _T_68 = shl(UInt<4>("h0f"), 4) @[Bitwise.scala 102:47]
    node _T_69 = xor(UInt<8>("h0ff"), _T_68) @[Bitwise.scala 102:21]
    node _T_70 = shr(_T_67, 4) @[Bitwise.scala 103:21]
    node _T_71 = and(_T_70, _T_69) @[Bitwise.scala 103:31]
    node _T_72 = bits(_T_67, 3, 0) @[Bitwise.scala 103:46]
    node _T_73 = shl(_T_72, 4) @[Bitwise.scala 103:65]
    node _T_74 = not(_T_69) @[Bitwise.scala 103:77]
    node _T_75 = and(_T_73, _T_74) @[Bitwise.scala 103:75]
    node _T_76 = or(_T_71, _T_75) @[Bitwise.scala 103:39]
    node _T_77 = bits(_T_69, 5, 0) @[Bitwise.scala 102:28]
    node _T_78 = shl(_T_77, 2) @[Bitwise.scala 102:47]
    node _T_79 = xor(_T_69, _T_78) @[Bitwise.scala 102:21]
    node _T_80 = shr(_T_76, 2) @[Bitwise.scala 103:21]
    node _T_81 = and(_T_80, _T_79) @[Bitwise.scala 103:31]
    node _T_82 = bits(_T_76, 5, 0) @[Bitwise.scala 103:46]
    node _T_83 = shl(_T_82, 2) @[Bitwise.scala 103:65]
    node _T_84 = not(_T_79) @[Bitwise.scala 103:77]
    node _T_85 = and(_T_83, _T_84) @[Bitwise.scala 103:75]
    node _T_86 = or(_T_81, _T_85) @[Bitwise.scala 103:39]
    node _T_87 = bits(_T_79, 6, 0) @[Bitwise.scala 102:28]
    node _T_88 = shl(_T_87, 1) @[Bitwise.scala 102:47]
    node _T_89 = xor(_T_79, _T_88) @[Bitwise.scala 102:21]
    node _T_90 = shr(_T_86, 1) @[Bitwise.scala 103:21]
    node _T_91 = and(_T_90, _T_89) @[Bitwise.scala 103:31]
    node _T_92 = bits(_T_86, 6, 0) @[Bitwise.scala 103:46]
    node _T_93 = shl(_T_92, 1) @[Bitwise.scala 103:65]
    node _T_94 = not(_T_89) @[Bitwise.scala 103:77]
    node _T_95 = and(_T_93, _T_94) @[Bitwise.scala 103:75]
    node hi_5 = or(_T_91, _T_95) @[Bitwise.scala 103:39]
    node _T_96 = bits(_T_66, 11, 8) @[Bitwise.scala 109:44]
    node _T_97 = bits(_T_96, 1, 0) @[Bitwise.scala 109:18]
    node hi_6 = bits(_T_97, 0, 0) @[Bitwise.scala 109:18]
    node lo_5 = bits(_T_97, 1, 1) @[Bitwise.scala 109:44]
    node hi_7 = cat(hi_6, lo_5) @[Cat.scala 30:58]
    node _T_98 = bits(_T_96, 3, 2) @[Bitwise.scala 109:44]
    node hi_8 = bits(_T_98, 0, 0) @[Bitwise.scala 109:18]
    node lo_6 = bits(_T_98, 1, 1) @[Bitwise.scala 109:44]
    node lo_7 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node lo_8 = cat(hi_7, lo_7) @[Cat.scala 30:58]
    node _T_99 = cat(hi_5, lo_8) @[Cat.scala 30:58]
    io.cout <= _T_99 @[PrefixSum.scala 47:11]
    
  module CSA4_58 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA3 of CSA3_116 @[PrefixSum.scala 60:23]
    CSA3.io is invalid
    CSA3.clock <= clock
    CSA3.reset <= reset
    CSA3.io.a <= io.a @[PrefixSum.scala 61:13]
    CSA3.io.b <= io.b @[PrefixSum.scala 62:13]
    CSA3.io.c <= io.c @[PrefixSum.scala 63:13]
    inst CSA3_1 of CSA3_117 @[PrefixSum.scala 65:23]
    CSA3_1.io is invalid
    CSA3_1.clock <= clock
    CSA3_1.reset <= reset
    CSA3_1.io.a <= io.d @[PrefixSum.scala 66:13]
    CSA3_1.io.b <= CSA3.io.sum @[PrefixSum.scala 67:13]
    CSA3_1.io.c <= CSA3.io.cout @[PrefixSum.scala 68:13]
    io.sum <= CSA3_1.io.sum @[PrefixSum.scala 70:10]
    io.cout <= CSA3_1.io.cout @[PrefixSum.scala 71:11]
    
  module SparsePrefixSum : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : UInt<32>, out : UInt<224>}
    
    clock is invalid
    reset is invalid
    io is invalid
    inst CSA4 of CSA4 @[PrefixSum.scala 82:40]
    CSA4.io is invalid
    CSA4.clock <= clock
    CSA4.reset <= reset
    inst CSA4_1 of CSA4_1 @[PrefixSum.scala 82:40]
    CSA4_1.io is invalid
    CSA4_1.clock <= clock
    CSA4_1.reset <= reset
    inst CSA4_2 of CSA4_2 @[PrefixSum.scala 82:40]
    CSA4_2.io is invalid
    CSA4_2.clock <= clock
    CSA4_2.reset <= reset
    inst CSA4_3 of CSA4_3 @[PrefixSum.scala 82:40]
    CSA4_3.io is invalid
    CSA4_3.clock <= clock
    CSA4_3.reset <= reset
    inst CSA4_4 of CSA4_4 @[PrefixSum.scala 82:40]
    CSA4_4.io is invalid
    CSA4_4.clock <= clock
    CSA4_4.reset <= reset
    inst CSA4_5 of CSA4_5 @[PrefixSum.scala 82:40]
    CSA4_5.io is invalid
    CSA4_5.clock <= clock
    CSA4_5.reset <= reset
    inst CSA4_6 of CSA4_6 @[PrefixSum.scala 82:40]
    CSA4_6.io is invalid
    CSA4_6.clock <= clock
    CSA4_6.reset <= reset
    inst CSA4_7 of CSA4_7 @[PrefixSum.scala 82:40]
    CSA4_7.io is invalid
    CSA4_7.clock <= clock
    CSA4_7.reset <= reset
    inst CSA4_8 of CSA4_8 @[PrefixSum.scala 82:40]
    CSA4_8.io is invalid
    CSA4_8.clock <= clock
    CSA4_8.reset <= reset
    inst CSA4_9 of CSA4_9 @[PrefixSum.scala 82:40]
    CSA4_9.io is invalid
    CSA4_9.clock <= clock
    CSA4_9.reset <= reset
    inst CSA4_10 of CSA4_10 @[PrefixSum.scala 82:40]
    CSA4_10.io is invalid
    CSA4_10.clock <= clock
    CSA4_10.reset <= reset
    inst CSA4_11 of CSA4_11 @[PrefixSum.scala 82:40]
    CSA4_11.io is invalid
    CSA4_11.clock <= clock
    CSA4_11.reset <= reset
    inst CSA4_12 of CSA4_12 @[PrefixSum.scala 82:40]
    CSA4_12.io is invalid
    CSA4_12.clock <= clock
    CSA4_12.reset <= reset
    inst CSA4_13 of CSA4_13 @[PrefixSum.scala 82:40]
    CSA4_13.io is invalid
    CSA4_13.clock <= clock
    CSA4_13.reset <= reset
    inst CSA4_14 of CSA4_14 @[PrefixSum.scala 82:40]
    CSA4_14.io is invalid
    CSA4_14.clock <= clock
    CSA4_14.reset <= reset
    inst CSA4_15 of CSA4_15 @[PrefixSum.scala 82:40]
    CSA4_15.io is invalid
    CSA4_15.clock <= clock
    CSA4_15.reset <= reset
    inst CSA4_16 of CSA4_16 @[PrefixSum.scala 82:40]
    CSA4_16.io is invalid
    CSA4_16.clock <= clock
    CSA4_16.reset <= reset
    inst CSA4_17 of CSA4_17 @[PrefixSum.scala 82:40]
    CSA4_17.io is invalid
    CSA4_17.clock <= clock
    CSA4_17.reset <= reset
    inst CSA4_18 of CSA4_18 @[PrefixSum.scala 82:40]
    CSA4_18.io is invalid
    CSA4_18.clock <= clock
    CSA4_18.reset <= reset
    inst CSA4_19 of CSA4_19 @[PrefixSum.scala 82:40]
    CSA4_19.io is invalid
    CSA4_19.clock <= clock
    CSA4_19.reset <= reset
    inst CSA4_20 of CSA4_20 @[PrefixSum.scala 82:40]
    CSA4_20.io is invalid
    CSA4_20.clock <= clock
    CSA4_20.reset <= reset
    inst CSA4_21 of CSA4_21 @[PrefixSum.scala 82:40]
    CSA4_21.io is invalid
    CSA4_21.clock <= clock
    CSA4_21.reset <= reset
    inst CSA4_22 of CSA4_22 @[PrefixSum.scala 82:40]
    CSA4_22.io is invalid
    CSA4_22.clock <= clock
    CSA4_22.reset <= reset
    inst CSA4_23 of CSA4_23 @[PrefixSum.scala 82:40]
    CSA4_23.io is invalid
    CSA4_23.clock <= clock
    CSA4_23.reset <= reset
    inst CSA4_24 of CSA4_24 @[PrefixSum.scala 82:40]
    CSA4_24.io is invalid
    CSA4_24.clock <= clock
    CSA4_24.reset <= reset
    inst CSA4_25 of CSA4_25 @[PrefixSum.scala 82:40]
    CSA4_25.io is invalid
    CSA4_25.clock <= clock
    CSA4_25.reset <= reset
    inst CSA4_26 of CSA4_26 @[PrefixSum.scala 82:40]
    CSA4_26.io is invalid
    CSA4_26.clock <= clock
    CSA4_26.reset <= reset
    inst CSA4_27 of CSA4_27 @[PrefixSum.scala 82:40]
    CSA4_27.io is invalid
    CSA4_27.clock <= clock
    CSA4_27.reset <= reset
    inst CSA4_28 of CSA4_28 @[PrefixSum.scala 82:40]
    CSA4_28.io is invalid
    CSA4_28.clock <= clock
    CSA4_28.reset <= reset
    inst CSA4_29 of CSA4_29 @[PrefixSum.scala 82:40]
    CSA4_29.io is invalid
    CSA4_29.clock <= clock
    CSA4_29.reset <= reset
    inst CSA4_30 of CSA4_30 @[PrefixSum.scala 82:40]
    CSA4_30.io is invalid
    CSA4_30.clock <= clock
    CSA4_30.reset <= reset
    wire CSA_UP : {flip a : UInt<6>, flip b : UInt<6>, flip c : UInt<6>, flip d : UInt<6>, sum : UInt<7>, cout : UInt<8>}[31] @[compatibility.scala 127:12]
    CSA_UP is invalid @[compatibility.scala 127:12]
    CSA_UP[0] <- CSA4.io @[compatibility.scala 127:12]
    CSA_UP[1] <- CSA4_1.io @[compatibility.scala 127:12]
    CSA_UP[2] <- CSA4_2.io @[compatibility.scala 127:12]
    CSA_UP[3] <- CSA4_3.io @[compatibility.scala 127:12]
    CSA_UP[4] <- CSA4_4.io @[compatibility.scala 127:12]
    CSA_UP[5] <- CSA4_5.io @[compatibility.scala 127:12]
    CSA_UP[6] <- CSA4_6.io @[compatibility.scala 127:12]
    CSA_UP[7] <- CSA4_7.io @[compatibility.scala 127:12]
    CSA_UP[8] <- CSA4_8.io @[compatibility.scala 127:12]
    CSA_UP[9] <- CSA4_9.io @[compatibility.scala 127:12]
    CSA_UP[10] <- CSA4_10.io @[compatibility.scala 127:12]
    CSA_UP[11] <- CSA4_11.io @[compatibility.scala 127:12]
    CSA_UP[12] <- CSA4_12.io @[compatibility.scala 127:12]
    CSA_UP[13] <- CSA4_13.io @[compatibility.scala 127:12]
    CSA_UP[14] <- CSA4_14.io @[compatibility.scala 127:12]
    CSA_UP[15] <- CSA4_15.io @[compatibility.scala 127:12]
    CSA_UP[16] <- CSA4_16.io @[compatibility.scala 127:12]
    CSA_UP[17] <- CSA4_17.io @[compatibility.scala 127:12]
    CSA_UP[18] <- CSA4_18.io @[compatibility.scala 127:12]
    CSA_UP[19] <- CSA4_19.io @[compatibility.scala 127:12]
    CSA_UP[20] <- CSA4_20.io @[compatibility.scala 127:12]
    CSA_UP[21] <- CSA4_21.io @[compatibility.scala 127:12]
    CSA_UP[22] <- CSA4_22.io @[compatibility.scala 127:12]
    CSA_UP[23] <- CSA4_23.io @[compatibility.scala 127:12]
    CSA_UP[24] <- CSA4_24.io @[compatibility.scala 127:12]
    CSA_UP[25] <- CSA4_25.io @[compatibility.scala 127:12]
    CSA_UP[26] <- CSA4_26.io @[compatibility.scala 127:12]
    CSA_UP[27] <- CSA4_27.io @[compatibility.scala 127:12]
    CSA_UP[28] <- CSA4_28.io @[compatibility.scala 127:12]
    CSA_UP[29] <- CSA4_29.io @[compatibility.scala 127:12]
    CSA_UP[30] <- CSA4_30.io @[compatibility.scala 127:12]
    inst CSA4_31 of CSA4_31 @[PrefixSum.scala 83:54]
    CSA4_31.io is invalid
    CSA4_31.clock <= clock
    CSA4_31.reset <= reset
    inst CSA4_32 of CSA4_32 @[PrefixSum.scala 83:54]
    CSA4_32.io is invalid
    CSA4_32.clock <= clock
    CSA4_32.reset <= reset
    inst CSA4_33 of CSA4_33 @[PrefixSum.scala 83:54]
    CSA4_33.io is invalid
    CSA4_33.clock <= clock
    CSA4_33.reset <= reset
    inst CSA4_34 of CSA4_34 @[PrefixSum.scala 83:54]
    CSA4_34.io is invalid
    CSA4_34.clock <= clock
    CSA4_34.reset <= reset
    inst CSA4_35 of CSA4_35 @[PrefixSum.scala 83:54]
    CSA4_35.io is invalid
    CSA4_35.clock <= clock
    CSA4_35.reset <= reset
    inst CSA4_36 of CSA4_36 @[PrefixSum.scala 83:54]
    CSA4_36.io is invalid
    CSA4_36.clock <= clock
    CSA4_36.reset <= reset
    inst CSA4_37 of CSA4_37 @[PrefixSum.scala 83:54]
    CSA4_37.io is invalid
    CSA4_37.clock <= clock
    CSA4_37.reset <= reset
    inst CSA4_38 of CSA4_38 @[PrefixSum.scala 83:54]
    CSA4_38.io is invalid
    CSA4_38.clock <= clock
    CSA4_38.reset <= reset
    inst CSA4_39 of CSA4_39 @[PrefixSum.scala 83:54]
    CSA4_39.io is invalid
    CSA4_39.clock <= clock
    CSA4_39.reset <= reset
    inst CSA4_40 of CSA4_40 @[PrefixSum.scala 83:54]
    CSA4_40.io is invalid
    CSA4_40.clock <= clock
    CSA4_40.reset <= reset
    inst CSA4_41 of CSA4_41 @[PrefixSum.scala 83:54]
    CSA4_41.io is invalid
    CSA4_41.clock <= clock
    CSA4_41.reset <= reset
    inst CSA4_42 of CSA4_42 @[PrefixSum.scala 83:54]
    CSA4_42.io is invalid
    CSA4_42.clock <= clock
    CSA4_42.reset <= reset
    inst CSA4_43 of CSA4_43 @[PrefixSum.scala 83:54]
    CSA4_43.io is invalid
    CSA4_43.clock <= clock
    CSA4_43.reset <= reset
    inst CSA4_44 of CSA4_44 @[PrefixSum.scala 83:54]
    CSA4_44.io is invalid
    CSA4_44.clock <= clock
    CSA4_44.reset <= reset
    inst CSA4_45 of CSA4_45 @[PrefixSum.scala 83:54]
    CSA4_45.io is invalid
    CSA4_45.clock <= clock
    CSA4_45.reset <= reset
    inst CSA4_46 of CSA4_46 @[PrefixSum.scala 83:54]
    CSA4_46.io is invalid
    CSA4_46.clock <= clock
    CSA4_46.reset <= reset
    inst CSA4_47 of CSA4_47 @[PrefixSum.scala 83:54]
    CSA4_47.io is invalid
    CSA4_47.clock <= clock
    CSA4_47.reset <= reset
    inst CSA4_48 of CSA4_48 @[PrefixSum.scala 83:54]
    CSA4_48.io is invalid
    CSA4_48.clock <= clock
    CSA4_48.reset <= reset
    inst CSA4_49 of CSA4_49 @[PrefixSum.scala 83:54]
    CSA4_49.io is invalid
    CSA4_49.clock <= clock
    CSA4_49.reset <= reset
    inst CSA4_50 of CSA4_50 @[PrefixSum.scala 83:54]
    CSA4_50.io is invalid
    CSA4_50.clock <= clock
    CSA4_50.reset <= reset
    inst CSA4_51 of CSA4_51 @[PrefixSum.scala 83:54]
    CSA4_51.io is invalid
    CSA4_51.clock <= clock
    CSA4_51.reset <= reset
    inst CSA4_52 of CSA4_52 @[PrefixSum.scala 83:54]
    CSA4_52.io is invalid
    CSA4_52.clock <= clock
    CSA4_52.reset <= reset
    inst CSA4_53 of CSA4_53 @[PrefixSum.scala 83:54]
    CSA4_53.io is invalid
    CSA4_53.clock <= clock
    CSA4_53.reset <= reset
    inst CSA4_54 of CSA4_54 @[PrefixSum.scala 83:54]
    CSA4_54.io is invalid
    CSA4_54.clock <= clock
    CSA4_54.reset <= reset
    inst CSA4_55 of CSA4_55 @[PrefixSum.scala 83:54]
    CSA4_55.io is invalid
    CSA4_55.clock <= clock
    CSA4_55.reset <= reset
    inst CSA4_56 of CSA4_56 @[PrefixSum.scala 83:54]
    CSA4_56.io is invalid
    CSA4_56.clock <= clock
    CSA4_56.reset <= reset
    inst CSA4_57 of CSA4_57 @[PrefixSum.scala 83:54]
    CSA4_57.io is invalid
    CSA4_57.clock <= clock
    CSA4_57.reset <= reset
    inst CSA4_58 of CSA4_58 @[PrefixSum.scala 83:54]
    CSA4_58.io is invalid
    CSA4_58.clock <= clock
    CSA4_58.reset <= reset
    wire CSA_DOWN : {flip a : UInt<10>, flip b : UInt<10>, flip c : UInt<10>, flip d : UInt<10>, sum : UInt<11>, cout : UInt<12>}[28] @[compatibility.scala 127:12]
    CSA_DOWN is invalid @[compatibility.scala 127:12]
    CSA_DOWN[0] <- CSA4_31.io @[compatibility.scala 127:12]
    CSA_DOWN[1] <- CSA4_32.io @[compatibility.scala 127:12]
    CSA_DOWN[2] <- CSA4_33.io @[compatibility.scala 127:12]
    CSA_DOWN[3] <- CSA4_34.io @[compatibility.scala 127:12]
    CSA_DOWN[4] <- CSA4_35.io @[compatibility.scala 127:12]
    CSA_DOWN[5] <- CSA4_36.io @[compatibility.scala 127:12]
    CSA_DOWN[6] <- CSA4_37.io @[compatibility.scala 127:12]
    CSA_DOWN[7] <- CSA4_38.io @[compatibility.scala 127:12]
    CSA_DOWN[8] <- CSA4_39.io @[compatibility.scala 127:12]
    CSA_DOWN[9] <- CSA4_40.io @[compatibility.scala 127:12]
    CSA_DOWN[10] <- CSA4_41.io @[compatibility.scala 127:12]
    CSA_DOWN[11] <- CSA4_42.io @[compatibility.scala 127:12]
    CSA_DOWN[12] <- CSA4_43.io @[compatibility.scala 127:12]
    CSA_DOWN[13] <- CSA4_44.io @[compatibility.scala 127:12]
    CSA_DOWN[14] <- CSA4_45.io @[compatibility.scala 127:12]
    CSA_DOWN[15] <- CSA4_46.io @[compatibility.scala 127:12]
    CSA_DOWN[16] <- CSA4_47.io @[compatibility.scala 127:12]
    CSA_DOWN[17] <- CSA4_48.io @[compatibility.scala 127:12]
    CSA_DOWN[18] <- CSA4_49.io @[compatibility.scala 127:12]
    CSA_DOWN[19] <- CSA4_50.io @[compatibility.scala 127:12]
    CSA_DOWN[20] <- CSA4_51.io @[compatibility.scala 127:12]
    CSA_DOWN[21] <- CSA4_52.io @[compatibility.scala 127:12]
    CSA_DOWN[22] <- CSA4_53.io @[compatibility.scala 127:12]
    CSA_DOWN[23] <- CSA4_54.io @[compatibility.scala 127:12]
    CSA_DOWN[24] <- CSA4_55.io @[compatibility.scala 127:12]
    CSA_DOWN[25] <- CSA4_56.io @[compatibility.scala 127:12]
    CSA_DOWN[26] <- CSA4_57.io @[compatibility.scala 127:12]
    CSA_DOWN[27] <- CSA4_58.io @[compatibility.scala 127:12]
    wire _WIRE : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_1 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_1 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_2 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_2 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_3 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_3 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_4 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_4 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_5 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_5 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_6 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_6 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_7 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_7 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_8 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_8 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_9 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_9 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_10 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_10 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_11 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_11 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_12 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_12 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_13 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_13 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_14 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_14 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_15 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_15 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_16 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_16 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_17 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_17 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_18 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_18 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_19 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_19 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_20 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_20 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_21 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_21 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_22 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_22 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_23 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_23 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_24 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_24 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_25 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_25 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_26 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_26 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_27 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_27 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_28 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_28 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_29 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_29 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_30 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_30 is invalid @[PrefixSum.scala 84:31]
    wire _WIRE_31 : UInt<10> @[PrefixSum.scala 84:31]
    _WIRE_31 is invalid @[PrefixSum.scala 84:31]
    wire Sum : UInt<10>[32] @[compatibility.scala 127:12]
    Sum is invalid @[compatibility.scala 127:12]
    Sum[0] <= _WIRE @[compatibility.scala 127:12]
    Sum[1] <= _WIRE_1 @[compatibility.scala 127:12]
    Sum[2] <= _WIRE_2 @[compatibility.scala 127:12]
    Sum[3] <= _WIRE_3 @[compatibility.scala 127:12]
    Sum[4] <= _WIRE_4 @[compatibility.scala 127:12]
    Sum[5] <= _WIRE_5 @[compatibility.scala 127:12]
    Sum[6] <= _WIRE_6 @[compatibility.scala 127:12]
    Sum[7] <= _WIRE_7 @[compatibility.scala 127:12]
    Sum[8] <= _WIRE_8 @[compatibility.scala 127:12]
    Sum[9] <= _WIRE_9 @[compatibility.scala 127:12]
    Sum[10] <= _WIRE_10 @[compatibility.scala 127:12]
    Sum[11] <= _WIRE_11 @[compatibility.scala 127:12]
    Sum[12] <= _WIRE_12 @[compatibility.scala 127:12]
    Sum[13] <= _WIRE_13 @[compatibility.scala 127:12]
    Sum[14] <= _WIRE_14 @[compatibility.scala 127:12]
    Sum[15] <= _WIRE_15 @[compatibility.scala 127:12]
    Sum[16] <= _WIRE_16 @[compatibility.scala 127:12]
    Sum[17] <= _WIRE_17 @[compatibility.scala 127:12]
    Sum[18] <= _WIRE_18 @[compatibility.scala 127:12]
    Sum[19] <= _WIRE_19 @[compatibility.scala 127:12]
    Sum[20] <= _WIRE_20 @[compatibility.scala 127:12]
    Sum[21] <= _WIRE_21 @[compatibility.scala 127:12]
    Sum[22] <= _WIRE_22 @[compatibility.scala 127:12]
    Sum[23] <= _WIRE_23 @[compatibility.scala 127:12]
    Sum[24] <= _WIRE_24 @[compatibility.scala 127:12]
    Sum[25] <= _WIRE_25 @[compatibility.scala 127:12]
    Sum[26] <= _WIRE_26 @[compatibility.scala 127:12]
    Sum[27] <= _WIRE_27 @[compatibility.scala 127:12]
    Sum[28] <= _WIRE_28 @[compatibility.scala 127:12]
    Sum[29] <= _WIRE_29 @[compatibility.scala 127:12]
    Sum[30] <= _WIRE_30 @[compatibility.scala 127:12]
    Sum[31] <= _WIRE_31 @[compatibility.scala 127:12]
    wire _WIRE_32 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_32 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_33 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_33 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_34 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_34 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_35 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_35 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_36 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_36 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_37 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_37 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_38 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_38 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_39 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_39 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_40 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_40 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_41 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_41 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_42 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_42 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_43 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_43 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_44 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_44 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_45 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_45 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_46 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_46 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_47 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_47 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_48 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_48 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_49 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_49 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_50 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_50 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_51 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_51 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_52 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_52 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_53 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_53 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_54 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_54 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_55 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_55 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_56 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_56 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_57 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_57 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_58 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_58 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_59 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_59 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_60 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_60 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_61 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_61 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_62 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_62 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_63 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_63 is invalid @[PrefixSum.scala 85:37]
    wire _WIRE_64 : UInt<10> @[PrefixSum.scala 85:37]
    _WIRE_64 is invalid @[PrefixSum.scala 85:37]
    wire Carry : UInt<10>[33] @[compatibility.scala 127:12]
    Carry is invalid @[compatibility.scala 127:12]
    Carry[0] <= _WIRE_32 @[compatibility.scala 127:12]
    Carry[1] <= _WIRE_33 @[compatibility.scala 127:12]
    Carry[2] <= _WIRE_34 @[compatibility.scala 127:12]
    Carry[3] <= _WIRE_35 @[compatibility.scala 127:12]
    Carry[4] <= _WIRE_36 @[compatibility.scala 127:12]
    Carry[5] <= _WIRE_37 @[compatibility.scala 127:12]
    Carry[6] <= _WIRE_38 @[compatibility.scala 127:12]
    Carry[7] <= _WIRE_39 @[compatibility.scala 127:12]
    Carry[8] <= _WIRE_40 @[compatibility.scala 127:12]
    Carry[9] <= _WIRE_41 @[compatibility.scala 127:12]
    Carry[10] <= _WIRE_42 @[compatibility.scala 127:12]
    Carry[11] <= _WIRE_43 @[compatibility.scala 127:12]
    Carry[12] <= _WIRE_44 @[compatibility.scala 127:12]
    Carry[13] <= _WIRE_45 @[compatibility.scala 127:12]
    Carry[14] <= _WIRE_46 @[compatibility.scala 127:12]
    Carry[15] <= _WIRE_47 @[compatibility.scala 127:12]
    Carry[16] <= _WIRE_48 @[compatibility.scala 127:12]
    Carry[17] <= _WIRE_49 @[compatibility.scala 127:12]
    Carry[18] <= _WIRE_50 @[compatibility.scala 127:12]
    Carry[19] <= _WIRE_51 @[compatibility.scala 127:12]
    Carry[20] <= _WIRE_52 @[compatibility.scala 127:12]
    Carry[21] <= _WIRE_53 @[compatibility.scala 127:12]
    Carry[22] <= _WIRE_54 @[compatibility.scala 127:12]
    Carry[23] <= _WIRE_55 @[compatibility.scala 127:12]
    Carry[24] <= _WIRE_56 @[compatibility.scala 127:12]
    Carry[25] <= _WIRE_57 @[compatibility.scala 127:12]
    Carry[26] <= _WIRE_58 @[compatibility.scala 127:12]
    Carry[27] <= _WIRE_59 @[compatibility.scala 127:12]
    Carry[28] <= _WIRE_60 @[compatibility.scala 127:12]
    Carry[29] <= _WIRE_61 @[compatibility.scala 127:12]
    Carry[30] <= _WIRE_62 @[compatibility.scala 127:12]
    Carry[31] <= _WIRE_63 @[compatibility.scala 127:12]
    Carry[32] <= _WIRE_64 @[compatibility.scala 127:12]
    wire _WIRE_65 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_65 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_66 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_66 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_67 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_67 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_68 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_68 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_69 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_69 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_70 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_70 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_71 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_71 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_72 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_72 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_73 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_73 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_74 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_74 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_75 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_75 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_76 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_76 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_77 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_77 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_78 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_78 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_79 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_79 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_80 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_80 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_81 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_81 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_82 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_82 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_83 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_83 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_84 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_84 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_85 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_85 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_86 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_86 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_87 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_87 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_88 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_88 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_89 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_89 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_90 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_90 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_91 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_91 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_92 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_92 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_93 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_93 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_94 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_94 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_95 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_95 is invalid @[PrefixSum.scala 86:35]
    wire _WIRE_96 : UInt<10> @[PrefixSum.scala 86:35]
    _WIRE_96 is invalid @[PrefixSum.scala 86:35]
    wire Sum_lv2 : UInt<10>[32] @[compatibility.scala 127:12]
    Sum_lv2 is invalid @[compatibility.scala 127:12]
    Sum_lv2[0] <= _WIRE_65 @[compatibility.scala 127:12]
    Sum_lv2[1] <= _WIRE_66 @[compatibility.scala 127:12]
    Sum_lv2[2] <= _WIRE_67 @[compatibility.scala 127:12]
    Sum_lv2[3] <= _WIRE_68 @[compatibility.scala 127:12]
    Sum_lv2[4] <= _WIRE_69 @[compatibility.scala 127:12]
    Sum_lv2[5] <= _WIRE_70 @[compatibility.scala 127:12]
    Sum_lv2[6] <= _WIRE_71 @[compatibility.scala 127:12]
    Sum_lv2[7] <= _WIRE_72 @[compatibility.scala 127:12]
    Sum_lv2[8] <= _WIRE_73 @[compatibility.scala 127:12]
    Sum_lv2[9] <= _WIRE_74 @[compatibility.scala 127:12]
    Sum_lv2[10] <= _WIRE_75 @[compatibility.scala 127:12]
    Sum_lv2[11] <= _WIRE_76 @[compatibility.scala 127:12]
    Sum_lv2[12] <= _WIRE_77 @[compatibility.scala 127:12]
    Sum_lv2[13] <= _WIRE_78 @[compatibility.scala 127:12]
    Sum_lv2[14] <= _WIRE_79 @[compatibility.scala 127:12]
    Sum_lv2[15] <= _WIRE_80 @[compatibility.scala 127:12]
    Sum_lv2[16] <= _WIRE_81 @[compatibility.scala 127:12]
    Sum_lv2[17] <= _WIRE_82 @[compatibility.scala 127:12]
    Sum_lv2[18] <= _WIRE_83 @[compatibility.scala 127:12]
    Sum_lv2[19] <= _WIRE_84 @[compatibility.scala 127:12]
    Sum_lv2[20] <= _WIRE_85 @[compatibility.scala 127:12]
    Sum_lv2[21] <= _WIRE_86 @[compatibility.scala 127:12]
    Sum_lv2[22] <= _WIRE_87 @[compatibility.scala 127:12]
    Sum_lv2[23] <= _WIRE_88 @[compatibility.scala 127:12]
    Sum_lv2[24] <= _WIRE_89 @[compatibility.scala 127:12]
    Sum_lv2[25] <= _WIRE_90 @[compatibility.scala 127:12]
    Sum_lv2[26] <= _WIRE_91 @[compatibility.scala 127:12]
    Sum_lv2[27] <= _WIRE_92 @[compatibility.scala 127:12]
    Sum_lv2[28] <= _WIRE_93 @[compatibility.scala 127:12]
    Sum_lv2[29] <= _WIRE_94 @[compatibility.scala 127:12]
    Sum_lv2[30] <= _WIRE_95 @[compatibility.scala 127:12]
    Sum_lv2[31] <= _WIRE_96 @[compatibility.scala 127:12]
    wire _WIRE_97 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_97 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_98 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_98 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_99 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_99 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_100 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_100 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_101 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_101 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_102 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_102 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_103 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_103 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_104 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_104 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_105 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_105 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_106 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_106 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_107 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_107 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_108 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_108 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_109 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_109 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_110 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_110 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_111 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_111 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_112 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_112 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_113 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_113 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_114 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_114 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_115 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_115 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_116 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_116 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_117 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_117 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_118 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_118 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_119 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_119 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_120 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_120 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_121 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_121 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_122 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_122 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_123 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_123 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_124 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_124 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_125 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_125 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_126 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_126 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_127 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_127 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_128 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_128 is invalid @[PrefixSum.scala 87:41]
    wire _WIRE_129 : UInt<10> @[PrefixSum.scala 87:41]
    _WIRE_129 is invalid @[PrefixSum.scala 87:41]
    wire Carry_lv2 : UInt<10>[33] @[compatibility.scala 127:12]
    Carry_lv2 is invalid @[compatibility.scala 127:12]
    Carry_lv2[0] <= _WIRE_97 @[compatibility.scala 127:12]
    Carry_lv2[1] <= _WIRE_98 @[compatibility.scala 127:12]
    Carry_lv2[2] <= _WIRE_99 @[compatibility.scala 127:12]
    Carry_lv2[3] <= _WIRE_100 @[compatibility.scala 127:12]
    Carry_lv2[4] <= _WIRE_101 @[compatibility.scala 127:12]
    Carry_lv2[5] <= _WIRE_102 @[compatibility.scala 127:12]
    Carry_lv2[6] <= _WIRE_103 @[compatibility.scala 127:12]
    Carry_lv2[7] <= _WIRE_104 @[compatibility.scala 127:12]
    Carry_lv2[8] <= _WIRE_105 @[compatibility.scala 127:12]
    Carry_lv2[9] <= _WIRE_106 @[compatibility.scala 127:12]
    Carry_lv2[10] <= _WIRE_107 @[compatibility.scala 127:12]
    Carry_lv2[11] <= _WIRE_108 @[compatibility.scala 127:12]
    Carry_lv2[12] <= _WIRE_109 @[compatibility.scala 127:12]
    Carry_lv2[13] <= _WIRE_110 @[compatibility.scala 127:12]
    Carry_lv2[14] <= _WIRE_111 @[compatibility.scala 127:12]
    Carry_lv2[15] <= _WIRE_112 @[compatibility.scala 127:12]
    Carry_lv2[16] <= _WIRE_113 @[compatibility.scala 127:12]
    Carry_lv2[17] <= _WIRE_114 @[compatibility.scala 127:12]
    Carry_lv2[18] <= _WIRE_115 @[compatibility.scala 127:12]
    Carry_lv2[19] <= _WIRE_116 @[compatibility.scala 127:12]
    Carry_lv2[20] <= _WIRE_117 @[compatibility.scala 127:12]
    Carry_lv2[21] <= _WIRE_118 @[compatibility.scala 127:12]
    Carry_lv2[22] <= _WIRE_119 @[compatibility.scala 127:12]
    Carry_lv2[23] <= _WIRE_120 @[compatibility.scala 127:12]
    Carry_lv2[24] <= _WIRE_121 @[compatibility.scala 127:12]
    Carry_lv2[25] <= _WIRE_122 @[compatibility.scala 127:12]
    Carry_lv2[26] <= _WIRE_123 @[compatibility.scala 127:12]
    Carry_lv2[27] <= _WIRE_124 @[compatibility.scala 127:12]
    Carry_lv2[28] <= _WIRE_125 @[compatibility.scala 127:12]
    Carry_lv2[29] <= _WIRE_126 @[compatibility.scala 127:12]
    Carry_lv2[30] <= _WIRE_127 @[compatibility.scala 127:12]
    Carry_lv2[31] <= _WIRE_128 @[compatibility.scala 127:12]
    Carry_lv2[32] <= _WIRE_129 @[compatibility.scala 127:12]
    node _T = bits(io.in, 0, 0) @[PrefixSum.scala 91:25]
    CSA_UP[0].a <= _T @[PrefixSum.scala 91:17]
    node _T_1 = bits(io.in, 1, 1) @[PrefixSum.scala 92:25]
    CSA_UP[0].b <= _T_1 @[PrefixSum.scala 92:17]
    CSA_UP[0].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[0].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    Sum[1] <= CSA_UP[0].sum @[PrefixSum.scala 96:22]
    Carry[1] <= CSA_UP[0].cout @[PrefixSum.scala 97:24]
    node _T_2 = bits(io.in, 1, 1) @[PrefixSum.scala 91:25]
    CSA_UP[1].a <= _T_2 @[PrefixSum.scala 91:17]
    node _T_3 = bits(io.in, 2, 2) @[PrefixSum.scala 92:25]
    CSA_UP[1].b <= _T_3 @[PrefixSum.scala 92:17]
    CSA_UP[1].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[1].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    node _T_4 = bits(io.in, 2, 2) @[PrefixSum.scala 91:25]
    CSA_UP[2].a <= _T_4 @[PrefixSum.scala 91:17]
    node _T_5 = bits(io.in, 3, 3) @[PrefixSum.scala 92:25]
    CSA_UP[2].b <= _T_5 @[PrefixSum.scala 92:17]
    CSA_UP[2].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[2].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    Sum[5] <= CSA_UP[2].sum @[PrefixSum.scala 96:22]
    Carry[5] <= CSA_UP[2].cout @[PrefixSum.scala 97:24]
    node _T_6 = bits(io.in, 3, 3) @[PrefixSum.scala 91:25]
    CSA_UP[3].a <= _T_6 @[PrefixSum.scala 91:17]
    node _T_7 = bits(io.in, 4, 4) @[PrefixSum.scala 92:25]
    CSA_UP[3].b <= _T_7 @[PrefixSum.scala 92:17]
    CSA_UP[3].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[3].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    node _T_8 = bits(io.in, 4, 4) @[PrefixSum.scala 91:25]
    CSA_UP[4].a <= _T_8 @[PrefixSum.scala 91:17]
    node _T_9 = bits(io.in, 5, 5) @[PrefixSum.scala 92:25]
    CSA_UP[4].b <= _T_9 @[PrefixSum.scala 92:17]
    CSA_UP[4].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[4].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    Sum[9] <= CSA_UP[4].sum @[PrefixSum.scala 96:22]
    Carry[9] <= CSA_UP[4].cout @[PrefixSum.scala 97:24]
    node _T_10 = bits(io.in, 5, 5) @[PrefixSum.scala 91:25]
    CSA_UP[5].a <= _T_10 @[PrefixSum.scala 91:17]
    node _T_11 = bits(io.in, 6, 6) @[PrefixSum.scala 92:25]
    CSA_UP[5].b <= _T_11 @[PrefixSum.scala 92:17]
    CSA_UP[5].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[5].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    node _T_12 = bits(io.in, 6, 6) @[PrefixSum.scala 91:25]
    CSA_UP[6].a <= _T_12 @[PrefixSum.scala 91:17]
    node _T_13 = bits(io.in, 7, 7) @[PrefixSum.scala 92:25]
    CSA_UP[6].b <= _T_13 @[PrefixSum.scala 92:17]
    CSA_UP[6].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[6].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    Sum[13] <= CSA_UP[6].sum @[PrefixSum.scala 96:22]
    Carry[13] <= CSA_UP[6].cout @[PrefixSum.scala 97:24]
    node _T_14 = bits(io.in, 7, 7) @[PrefixSum.scala 91:25]
    CSA_UP[7].a <= _T_14 @[PrefixSum.scala 91:17]
    node _T_15 = bits(io.in, 8, 8) @[PrefixSum.scala 92:25]
    CSA_UP[7].b <= _T_15 @[PrefixSum.scala 92:17]
    CSA_UP[7].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[7].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    node _T_16 = bits(io.in, 8, 8) @[PrefixSum.scala 91:25]
    CSA_UP[8].a <= _T_16 @[PrefixSum.scala 91:17]
    node _T_17 = bits(io.in, 9, 9) @[PrefixSum.scala 92:25]
    CSA_UP[8].b <= _T_17 @[PrefixSum.scala 92:17]
    CSA_UP[8].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[8].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    Sum[17] <= CSA_UP[8].sum @[PrefixSum.scala 96:22]
    Carry[17] <= CSA_UP[8].cout @[PrefixSum.scala 97:24]
    node _T_18 = bits(io.in, 9, 9) @[PrefixSum.scala 91:25]
    CSA_UP[9].a <= _T_18 @[PrefixSum.scala 91:17]
    node _T_19 = bits(io.in, 10, 10) @[PrefixSum.scala 92:25]
    CSA_UP[9].b <= _T_19 @[PrefixSum.scala 92:17]
    CSA_UP[9].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[9].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    node _T_20 = bits(io.in, 10, 10) @[PrefixSum.scala 91:25]
    CSA_UP[10].a <= _T_20 @[PrefixSum.scala 91:17]
    node _T_21 = bits(io.in, 11, 11) @[PrefixSum.scala 92:25]
    CSA_UP[10].b <= _T_21 @[PrefixSum.scala 92:17]
    CSA_UP[10].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[10].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    Sum[21] <= CSA_UP[10].sum @[PrefixSum.scala 96:22]
    Carry[21] <= CSA_UP[10].cout @[PrefixSum.scala 97:24]
    node _T_22 = bits(io.in, 11, 11) @[PrefixSum.scala 91:25]
    CSA_UP[11].a <= _T_22 @[PrefixSum.scala 91:17]
    node _T_23 = bits(io.in, 12, 12) @[PrefixSum.scala 92:25]
    CSA_UP[11].b <= _T_23 @[PrefixSum.scala 92:17]
    CSA_UP[11].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[11].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    node _T_24 = bits(io.in, 12, 12) @[PrefixSum.scala 91:25]
    CSA_UP[12].a <= _T_24 @[PrefixSum.scala 91:17]
    node _T_25 = bits(io.in, 13, 13) @[PrefixSum.scala 92:25]
    CSA_UP[12].b <= _T_25 @[PrefixSum.scala 92:17]
    CSA_UP[12].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[12].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    Sum[25] <= CSA_UP[12].sum @[PrefixSum.scala 96:22]
    Carry[25] <= CSA_UP[12].cout @[PrefixSum.scala 97:24]
    node _T_26 = bits(io.in, 13, 13) @[PrefixSum.scala 91:25]
    CSA_UP[13].a <= _T_26 @[PrefixSum.scala 91:17]
    node _T_27 = bits(io.in, 14, 14) @[PrefixSum.scala 92:25]
    CSA_UP[13].b <= _T_27 @[PrefixSum.scala 92:17]
    CSA_UP[13].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[13].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    node _T_28 = bits(io.in, 14, 14) @[PrefixSum.scala 91:25]
    CSA_UP[14].a <= _T_28 @[PrefixSum.scala 91:17]
    node _T_29 = bits(io.in, 15, 15) @[PrefixSum.scala 92:25]
    CSA_UP[14].b <= _T_29 @[PrefixSum.scala 92:17]
    CSA_UP[14].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[14].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    Sum[29] <= CSA_UP[14].sum @[PrefixSum.scala 96:22]
    Carry[29] <= CSA_UP[14].cout @[PrefixSum.scala 97:24]
    node _T_30 = bits(io.in, 15, 15) @[PrefixSum.scala 91:25]
    CSA_UP[15].a <= _T_30 @[PrefixSum.scala 91:17]
    node _T_31 = bits(io.in, 16, 16) @[PrefixSum.scala 92:25]
    CSA_UP[15].b <= _T_31 @[PrefixSum.scala 92:17]
    CSA_UP[15].b <= UInt<1>("h00") @[PrefixSum.scala 93:17]
    CSA_UP[15].b <= UInt<1>("h00") @[PrefixSum.scala 94:17]
    CSA_UP[16].a <= CSA_UP[0].sum @[PrefixSum.scala 111:25]
    CSA_UP[16].b <= CSA_UP[0].cout @[PrefixSum.scala 112:25]
    CSA_UP[16].c <= CSA_UP[1].sum @[PrefixSum.scala 113:25]
    CSA_UP[16].d <= CSA_UP[1].sum @[PrefixSum.scala 114:25]
    Sum[3] <= CSA_UP[16].sum @[PrefixSum.scala 118:23]
    Carry[3] <= CSA_UP[16].cout @[PrefixSum.scala 119:25]
    CSA_UP[17].a <= CSA_UP[2].sum @[PrefixSum.scala 111:25]
    CSA_UP[17].b <= CSA_UP[2].cout @[PrefixSum.scala 112:25]
    CSA_UP[17].c <= CSA_UP[3].sum @[PrefixSum.scala 113:25]
    CSA_UP[17].d <= CSA_UP[3].sum @[PrefixSum.scala 114:25]
    CSA_UP[18].a <= CSA_UP[4].sum @[PrefixSum.scala 111:25]
    CSA_UP[18].b <= CSA_UP[4].cout @[PrefixSum.scala 112:25]
    CSA_UP[18].c <= CSA_UP[5].sum @[PrefixSum.scala 113:25]
    CSA_UP[18].d <= CSA_UP[5].sum @[PrefixSum.scala 114:25]
    Sum[11] <= CSA_UP[18].sum @[PrefixSum.scala 118:23]
    Carry[11] <= CSA_UP[18].cout @[PrefixSum.scala 119:25]
    CSA_UP[19].a <= CSA_UP[6].sum @[PrefixSum.scala 111:25]
    CSA_UP[19].b <= CSA_UP[6].cout @[PrefixSum.scala 112:25]
    CSA_UP[19].c <= CSA_UP[7].sum @[PrefixSum.scala 113:25]
    CSA_UP[19].d <= CSA_UP[7].sum @[PrefixSum.scala 114:25]
    CSA_UP[20].a <= CSA_UP[8].sum @[PrefixSum.scala 111:25]
    CSA_UP[20].b <= CSA_UP[8].cout @[PrefixSum.scala 112:25]
    CSA_UP[20].c <= CSA_UP[9].sum @[PrefixSum.scala 113:25]
    CSA_UP[20].d <= CSA_UP[9].sum @[PrefixSum.scala 114:25]
    Sum[19] <= CSA_UP[20].sum @[PrefixSum.scala 118:23]
    Carry[19] <= CSA_UP[20].cout @[PrefixSum.scala 119:25]
    CSA_UP[21].a <= CSA_UP[10].sum @[PrefixSum.scala 111:25]
    CSA_UP[21].b <= CSA_UP[10].cout @[PrefixSum.scala 112:25]
    CSA_UP[21].c <= CSA_UP[11].sum @[PrefixSum.scala 113:25]
    CSA_UP[21].d <= CSA_UP[11].sum @[PrefixSum.scala 114:25]
    CSA_UP[22].a <= CSA_UP[12].sum @[PrefixSum.scala 111:25]
    CSA_UP[22].b <= CSA_UP[12].cout @[PrefixSum.scala 112:25]
    CSA_UP[22].c <= CSA_UP[13].sum @[PrefixSum.scala 113:25]
    CSA_UP[22].d <= CSA_UP[13].sum @[PrefixSum.scala 114:25]
    Sum[27] <= CSA_UP[22].sum @[PrefixSum.scala 118:23]
    Carry[27] <= CSA_UP[22].cout @[PrefixSum.scala 119:25]
    CSA_UP[23].a <= CSA_UP[14].sum @[PrefixSum.scala 111:25]
    CSA_UP[23].b <= CSA_UP[14].cout @[PrefixSum.scala 112:25]
    CSA_UP[23].c <= CSA_UP[15].sum @[PrefixSum.scala 113:25]
    CSA_UP[23].d <= CSA_UP[15].sum @[PrefixSum.scala 114:25]
    CSA_UP[24].a <= CSA_UP[16].sum @[PrefixSum.scala 111:25]
    CSA_UP[24].b <= CSA_UP[16].cout @[PrefixSum.scala 112:25]
    CSA_UP[24].c <= CSA_UP[17].sum @[PrefixSum.scala 113:25]
    CSA_UP[24].d <= CSA_UP[17].sum @[PrefixSum.scala 114:25]
    Sum[7] <= CSA_UP[24].sum @[PrefixSum.scala 118:23]
    Carry[7] <= CSA_UP[24].cout @[PrefixSum.scala 119:25]
    CSA_UP[25].a <= CSA_UP[18].sum @[PrefixSum.scala 111:25]
    CSA_UP[25].b <= CSA_UP[18].cout @[PrefixSum.scala 112:25]
    CSA_UP[25].c <= CSA_UP[19].sum @[PrefixSum.scala 113:25]
    CSA_UP[25].d <= CSA_UP[19].sum @[PrefixSum.scala 114:25]
    CSA_UP[26].a <= CSA_UP[20].sum @[PrefixSum.scala 111:25]
    CSA_UP[26].b <= CSA_UP[20].cout @[PrefixSum.scala 112:25]
    CSA_UP[26].c <= CSA_UP[21].sum @[PrefixSum.scala 113:25]
    CSA_UP[26].d <= CSA_UP[21].sum @[PrefixSum.scala 114:25]
    Sum[23] <= CSA_UP[26].sum @[PrefixSum.scala 118:23]
    Carry[23] <= CSA_UP[26].cout @[PrefixSum.scala 119:25]
    CSA_UP[27].a <= CSA_UP[22].sum @[PrefixSum.scala 111:25]
    CSA_UP[27].b <= CSA_UP[22].cout @[PrefixSum.scala 112:25]
    CSA_UP[27].c <= CSA_UP[23].sum @[PrefixSum.scala 113:25]
    CSA_UP[27].d <= CSA_UP[23].sum @[PrefixSum.scala 114:25]
    CSA_UP[28].a <= CSA_UP[24].sum @[PrefixSum.scala 111:25]
    CSA_UP[28].b <= CSA_UP[24].cout @[PrefixSum.scala 112:25]
    CSA_UP[28].c <= CSA_UP[25].sum @[PrefixSum.scala 113:25]
    CSA_UP[28].d <= CSA_UP[25].sum @[PrefixSum.scala 114:25]
    Sum[15] <= CSA_UP[28].sum @[PrefixSum.scala 118:23]
    Carry[15] <= CSA_UP[28].cout @[PrefixSum.scala 119:25]
    CSA_UP[29].a <= CSA_UP[26].sum @[PrefixSum.scala 111:25]
    CSA_UP[29].b <= CSA_UP[26].cout @[PrefixSum.scala 112:25]
    CSA_UP[29].c <= CSA_UP[27].sum @[PrefixSum.scala 113:25]
    CSA_UP[29].d <= CSA_UP[27].sum @[PrefixSum.scala 114:25]
    CSA_UP[30].a <= CSA_UP[28].sum @[PrefixSum.scala 111:25]
    CSA_UP[30].b <= CSA_UP[28].cout @[PrefixSum.scala 112:25]
    CSA_UP[30].c <= CSA_UP[29].sum @[PrefixSum.scala 113:25]
    CSA_UP[30].d <= CSA_UP[29].sum @[PrefixSum.scala 114:25]
    Sum[31] <= CSA_UP[30].sum @[PrefixSum.scala 118:23]
    Carry[31] <= CSA_UP[30].cout @[PrefixSum.scala 119:25]
    CSA_DOWN[0].a <= Sum[15] @[PrefixSum.scala 135:27]
    CSA_DOWN[0].b <= Carry[15] @[PrefixSum.scala 136:27]
    CSA_DOWN[0].c <= Sum[23] @[PrefixSum.scala 137:27]
    CSA_DOWN[0].d <= Carry[23] @[PrefixSum.scala 138:27]
    Sum_lv2[23] <= CSA_DOWN[0].sum @[PrefixSum.scala 139:38]
    Carry_lv2[23] <= CSA_DOWN[0].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[1].a <= Sum[7] @[PrefixSum.scala 135:27]
    CSA_DOWN[1].b <= Carry[7] @[PrefixSum.scala 136:27]
    CSA_DOWN[1].c <= Sum[11] @[PrefixSum.scala 137:27]
    CSA_DOWN[1].d <= Carry[11] @[PrefixSum.scala 138:27]
    Sum_lv2[11] <= CSA_DOWN[1].sum @[PrefixSum.scala 139:38]
    Carry_lv2[11] <= CSA_DOWN[1].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[2].a <= Sum[15] @[PrefixSum.scala 135:27]
    CSA_DOWN[2].b <= Carry[15] @[PrefixSum.scala 136:27]
    CSA_DOWN[2].c <= Sum[19] @[PrefixSum.scala 137:27]
    CSA_DOWN[2].d <= Carry[19] @[PrefixSum.scala 138:27]
    Sum_lv2[19] <= CSA_DOWN[2].sum @[PrefixSum.scala 139:38]
    Carry_lv2[19] <= CSA_DOWN[2].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[4].a <= Sum[3] @[PrefixSum.scala 135:27]
    CSA_DOWN[4].b <= Carry[3] @[PrefixSum.scala 136:27]
    CSA_DOWN[4].c <= Sum[5] @[PrefixSum.scala 137:27]
    CSA_DOWN[4].d <= Carry[5] @[PrefixSum.scala 138:27]
    Sum_lv2[5] <= CSA_DOWN[4].sum @[PrefixSum.scala 139:38]
    Carry_lv2[5] <= CSA_DOWN[4].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[5].a <= Sum[7] @[PrefixSum.scala 135:27]
    CSA_DOWN[5].b <= Carry[7] @[PrefixSum.scala 136:27]
    CSA_DOWN[5].c <= Sum[9] @[PrefixSum.scala 137:27]
    CSA_DOWN[5].d <= Carry[9] @[PrefixSum.scala 138:27]
    Sum_lv2[9] <= CSA_DOWN[5].sum @[PrefixSum.scala 139:38]
    Carry_lv2[9] <= CSA_DOWN[5].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[6].a <= Sum[11] @[PrefixSum.scala 135:27]
    CSA_DOWN[6].b <= Carry[11] @[PrefixSum.scala 136:27]
    CSA_DOWN[6].c <= Sum[13] @[PrefixSum.scala 137:27]
    CSA_DOWN[6].d <= Carry[13] @[PrefixSum.scala 138:27]
    Sum_lv2[13] <= CSA_DOWN[6].sum @[PrefixSum.scala 139:38]
    Carry_lv2[13] <= CSA_DOWN[6].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[7].a <= Sum[15] @[PrefixSum.scala 135:27]
    CSA_DOWN[7].b <= Carry[15] @[PrefixSum.scala 136:27]
    CSA_DOWN[7].c <= Sum[17] @[PrefixSum.scala 137:27]
    CSA_DOWN[7].d <= Carry[17] @[PrefixSum.scala 138:27]
    Sum_lv2[17] <= CSA_DOWN[7].sum @[PrefixSum.scala 139:38]
    Carry_lv2[17] <= CSA_DOWN[7].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[11].a <= Sum[1] @[PrefixSum.scala 135:27]
    CSA_DOWN[11].b <= Carry[1] @[PrefixSum.scala 136:27]
    CSA_DOWN[11].c <= Sum[2] @[PrefixSum.scala 137:27]
    CSA_DOWN[11].d <= Carry[2] @[PrefixSum.scala 138:27]
    Sum_lv2[2] <= CSA_DOWN[11].sum @[PrefixSum.scala 139:38]
    Carry_lv2[2] <= CSA_DOWN[11].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[12].a <= Sum[3] @[PrefixSum.scala 135:27]
    CSA_DOWN[12].b <= Carry[3] @[PrefixSum.scala 136:27]
    CSA_DOWN[12].c <= Sum[4] @[PrefixSum.scala 137:27]
    CSA_DOWN[12].d <= Carry[4] @[PrefixSum.scala 138:27]
    Sum_lv2[4] <= CSA_DOWN[12].sum @[PrefixSum.scala 139:38]
    Carry_lv2[4] <= CSA_DOWN[12].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[13].a <= Sum[5] @[PrefixSum.scala 135:27]
    CSA_DOWN[13].b <= Carry[5] @[PrefixSum.scala 136:27]
    CSA_DOWN[13].c <= Sum[6] @[PrefixSum.scala 137:27]
    CSA_DOWN[13].d <= Carry[6] @[PrefixSum.scala 138:27]
    Sum_lv2[6] <= CSA_DOWN[13].sum @[PrefixSum.scala 139:38]
    Carry_lv2[6] <= CSA_DOWN[13].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[14].a <= Sum[7] @[PrefixSum.scala 135:27]
    CSA_DOWN[14].b <= Carry[7] @[PrefixSum.scala 136:27]
    CSA_DOWN[14].c <= Sum[8] @[PrefixSum.scala 137:27]
    CSA_DOWN[14].d <= Carry[8] @[PrefixSum.scala 138:27]
    Sum_lv2[8] <= CSA_DOWN[14].sum @[PrefixSum.scala 139:38]
    Carry_lv2[8] <= CSA_DOWN[14].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[15].a <= Sum[9] @[PrefixSum.scala 135:27]
    CSA_DOWN[15].b <= Carry[9] @[PrefixSum.scala 136:27]
    CSA_DOWN[15].c <= Sum[10] @[PrefixSum.scala 137:27]
    CSA_DOWN[15].d <= Carry[10] @[PrefixSum.scala 138:27]
    Sum_lv2[10] <= CSA_DOWN[15].sum @[PrefixSum.scala 139:38]
    Carry_lv2[10] <= CSA_DOWN[15].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[16].a <= Sum[11] @[PrefixSum.scala 135:27]
    CSA_DOWN[16].b <= Carry[11] @[PrefixSum.scala 136:27]
    CSA_DOWN[16].c <= Sum[12] @[PrefixSum.scala 137:27]
    CSA_DOWN[16].d <= Carry[12] @[PrefixSum.scala 138:27]
    Sum_lv2[12] <= CSA_DOWN[16].sum @[PrefixSum.scala 139:38]
    Carry_lv2[12] <= CSA_DOWN[16].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[17].a <= Sum[13] @[PrefixSum.scala 135:27]
    CSA_DOWN[17].b <= Carry[13] @[PrefixSum.scala 136:27]
    CSA_DOWN[17].c <= Sum[14] @[PrefixSum.scala 137:27]
    CSA_DOWN[17].d <= Carry[14] @[PrefixSum.scala 138:27]
    Sum_lv2[14] <= CSA_DOWN[17].sum @[PrefixSum.scala 139:38]
    Carry_lv2[14] <= CSA_DOWN[17].cout @[PrefixSum.scala 140:40]
    CSA_DOWN[18].a <= Sum[15] @[PrefixSum.scala 135:27]
    CSA_DOWN[18].b <= Carry[15] @[PrefixSum.scala 136:27]
    CSA_DOWN[18].c <= Sum[16] @[PrefixSum.scala 137:27]
    CSA_DOWN[18].d <= Carry[16] @[PrefixSum.scala 138:27]
    Sum_lv2[16] <= CSA_DOWN[18].sum @[PrefixSum.scala 139:38]
    Carry_lv2[16] <= CSA_DOWN[18].cout @[PrefixSum.scala 140:40]
    
